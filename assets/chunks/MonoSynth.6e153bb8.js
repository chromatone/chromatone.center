import{E as a,o as i,R as g,z as f,M as l,O as r,U as v,r as d,c as o,T as n,d as y}from"./index.d12b1cdf.js";import{F as h}from"./Filter.7f4fa158.js";import{S as b}from"./Scale.cdb1ed5f.js";class t extends a{constructor(){super(i(t.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="FrequencyEnvelope";const e=i(t.getDefaults(),arguments,["attack","decay","sustain","release"]);this._octaves=e.octaves,this._baseFrequency=this.toFrequency(e.baseFrequency),this._exponent=this.input=new g({context:this.context,value:e.exponent}),this._scale=this.output=new b({context:this.context,min:this._baseFrequency,max:this._baseFrequency*Math.pow(2,this._octaves)}),this._sig.chain(this._exponent,this._scale)}static getDefaults(){return Object.assign(a.getDefaults(),{baseFrequency:200,exponent:1,octaves:4})}get baseFrequency(){return this._baseFrequency}set baseFrequency(e){const s=this.toFrequency(e);f(s,0),this._baseFrequency=s,this._scale.min=this._baseFrequency,this.octaves=this._octaves}get octaves(){return this._octaves}set octaves(e){this._octaves=e,this._scale.max=this._baseFrequency*Math.pow(2,e)}get exponent(){return this._exponent.value}set exponent(e){this._exponent.value=e}dispose(){return super.dispose(),this._exponent.dispose(),this._scale.dispose(),this}}class c extends l{constructor(){super(i(c.getDefaults(),arguments)),this.name="MonoSynth";const e=i(c.getDefaults(),arguments);this.oscillator=new r(Object.assign(e.oscillator,{context:this.context,detune:e.detune,onstop:()=>this.onsilence(this)})),this.frequency=this.oscillator.frequency,this.detune=this.oscillator.detune,this.filter=new h(Object.assign(e.filter,{context:this.context})),this.filterEnvelope=new t(Object.assign(e.filterEnvelope,{context:this.context})),this.envelope=new v(Object.assign(e.envelope,{context:this.context})),this.oscillator.chain(this.filter,this.envelope,this.output),this.filterEnvelope.connect(this.filter.frequency),d(this,["oscillator","frequency","detune","filter","filterEnvelope","envelope"])}static getDefaults(){return Object.assign(l.getDefaults(),{envelope:Object.assign(o(a.getDefaults(),Object.keys(n.getDefaults())),{attack:.005,decay:.1,release:1,sustain:.9}),filter:Object.assign(o(h.getDefaults(),Object.keys(n.getDefaults())),{Q:1,rolloff:-12,type:"lowpass"}),filterEnvelope:Object.assign(o(t.getDefaults(),Object.keys(n.getDefaults())),{attack:.6,baseFrequency:200,decay:.2,exponent:2,octaves:3,release:2,sustain:.5}),oscillator:Object.assign(o(r.getDefaults(),Object.keys(y.getDefaults())),{type:"sawtooth"})})}_triggerEnvelopeAttack(e,s=1){if(this.envelope.triggerAttack(e,s),this.filterEnvelope.triggerAttack(e),this.oscillator.start(e),this.envelope.sustain===0){const u=this.toSeconds(this.envelope.attack),p=this.toSeconds(this.envelope.decay);this.oscillator.stop(e+u+p)}}_triggerEnvelopeRelease(e){this.envelope.triggerRelease(e),this.filterEnvelope.triggerRelease(e),this.oscillator.stop(e+this.toSeconds(this.envelope.release))}getLevelAtTime(e){return e=this.toSeconds(e),this.envelope.getValueAtTime(e)}dispose(){return super.dispose(),this.oscillator.dispose(),this.envelope.dispose(),this.filterEnvelope.dispose(),this.filter.dispose(),this}}export{c as M};
