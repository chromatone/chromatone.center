import{D as M,P as _e}from"./index.67532665.js";import"./framework.f75e5dc4.js";import"./midi.ee496394.js";import"./index.de966dde.js";import"./commonjsHelpers.de833af9.js";import"./index.140cffd8.js";import"./colors.6e70028c.js";import"./index.654bd828.js";import"./calculations.65ee336d.js";import"./index.cccf7ef0.js";import"./synth.ffb45e01.js";import"./audio.2835df43.js";import"./Scale.f9a07a23.js";import"./Subtract.e7604129.js";import"./PingPongDelay.0ce05937.js";import"./AutoPanner.5498cf00.js";import"./MonoSynth.3cdcc469.js";import"./Filter.e19ab36f.js";import"./theory.dec16ed9.js";import"./index.be7eb4a8.js";import"./index.9f9b4fe3.js";var Oe={exports:{}};(function(Te){/**
 * {@link https://github.com/muaz-khan/RecordRTC|RecordRTC} is a WebRTC JavaScript library for audio/video as well as screen activity recording. It supports Chrome, Firefox, Opera, Android, and Microsoft Edge. Platforms: Linux, Mac and Windows. 
 * @summary Record audio, video or screen inside the browser.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef RecordRTC
 * @class
 * @example
 * var recorder = RecordRTC(mediaStream or [arrayOfMediaStream], {
 *     type: 'video', // audio or video or gif or canvas
 *     recorderType: MediaStreamRecorder || CanvasRecorder || StereoAudioRecorder || Etc
 * });
 * recorder.startRecording();
 * @see For further information:
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStream} mediaStream - Single media-stream object, array of media-streams, html-canvas-element, etc.
 * @param {object} config - {type:"video", recorderType: MediaStreamRecorder, disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, desiredSampRate: 16000, video: HTMLVideoElement, etc.}
 */function S(o,e){if(!o)throw"First parameter is required.";e=e||{type:"video"},e=new Ce(o,e);var t=this;function a(n){return e.disableLogs||console.log("RecordRTC version: ",t.version),n&&(e=new Ce(o,n)),e.disableLogs||console.log("started recording "+e.type+" stream."),f?(f.clearRecordedData(),f.record(),v("recording"),t.recordingDuration&&l(),t):(d(function(){t.recordingDuration&&l()}),t)}function d(n){n&&(e.initCallback=function(){n(),n=e.initCallback=null});var g=new Fe(o,e);f=new g(o,e),f.record(),v("recording"),e.disableLogs||console.log("Initialized recorderType:",f.constructor.name,"for output-type:",e.type)}function s(n){if(n=n||function(){},!f){p();return}if(t.state==="paused"){t.resumeRecording(),setTimeout(function(){s(n)},1);return}t.state!=="recording"&&!e.disableLogs&&console.warn('Recording state should be: "recording", however current state is: ',t.state),e.disableLogs||console.log("Stopped recording "+e.type+" stream."),e.type!=="gif"?f.stop(g):(f.stop(),g()),v("stopped");function g(k){if(!f){typeof n.call=="function"?n.call(t,""):n("");return}Object.keys(f).forEach(function(w){typeof f[w]!="function"&&(t[w]=f[w])});var i=f.blob;if(!i)if(k)f.blob=i=k;else throw"Recording failed.";if(i&&!e.disableLogs&&console.log(i.type,"->",ve(i.size)),n){var c;try{c=B.createObjectURL(i)}catch{}typeof n.call=="function"?n.call(t,c):n(c)}e.autoWriteToDisk&&b(function(w){var y={};y[e.type+"Blob"]=w,W.Store(y)})}}function u(){if(!f){p();return}if(t.state!=="recording"){e.disableLogs||console.warn("Unable to pause the recording. Recording state: ",t.state);return}v("paused"),f.pause(),e.disableLogs||console.log("Paused recording.")}function r(){if(!f){p();return}if(t.state!=="paused"){e.disableLogs||console.warn("Unable to resume the recording. Recording state: ",t.state);return}v("recording"),f.resume(),e.disableLogs||console.log("Resumed recording.")}function h(n){postMessage(new FileReaderSync().readAsDataURL(n))}function b(n,g){if(!n)throw"Pass a callback function over getDataURL.";var k=g?g.blob:(f||{}).blob;if(!k){e.disableLogs||console.warn("Blob encoder did not finish its job yet."),setTimeout(function(){b(n,g)},1e3);return}if(typeof Worker<"u"&&!navigator.mozGetUserMedia){var i=w(h);i.onmessage=function(y){n(y.data)},i.postMessage(k)}else{var c=new FileReader;c.readAsDataURL(k),c.onload=function(y){n(y.target.result)}}function w(y){try{var L=B.createObjectURL(new Blob([y.toString(),"this.onmessage =  function (eee) {"+y.name+"(eee.data);}"],{type:"application/javascript"})),C=new Worker(L);return B.revokeObjectURL(L),C}catch{}}}function l(n){if(n=n||0,t.state==="paused"){setTimeout(function(){l(n)},1e3);return}if(t.state!=="stopped"){if(n>=t.recordingDuration){s(t.onRecordingStopped);return}n+=1e3,setTimeout(function(){l(n)},1e3)}}function v(n){t&&(t.state=n,typeof t.onStateChanged.call=="function"?t.onStateChanged.call(t,n):t.onStateChanged(n))}var m='It seems that recorder is destroyed or "startRecording" is not invoked for '+e.type+" recorder.";function p(){e.disableLogs!==!0&&console.warn(m)}var f,R={startRecording:a,stopRecording:s,pauseRecording:u,resumeRecording:r,initRecorder:d,setRecordingDuration:function(n,g){if(typeof n>"u")throw"recordingDuration is required.";if(typeof n!="number")throw"recordingDuration must be a number.";return t.recordingDuration=n,t.onRecordingStopped=g||function(){},{onRecordingStopped:function(k){t.onRecordingStopped=k}}},clearRecordedData:function(){if(!f){p();return}f.clearRecordedData(),e.disableLogs||console.log("Cleared old recorded data.")},getBlob:function(){if(!f){p();return}return f.blob},getDataURL:b,toURL:function(){if(!f){p();return}return B.createObjectURL(f.blob)},getInternalRecorder:function(){return f},save:function(n){if(!f){p();return}Ae(f.blob,n)},getFromDisk:function(n){if(!f){p();return}S.getFromDisk(e.type,n)},setAdvertisementArray:function(n){e.advertisement=[];for(var g=n.length,k=0;k<g;k++)e.advertisement.push({duration:k,image:n[k]})},blob:null,bufferSize:0,sampleRate:0,buffer:null,reset:function(){t.state==="recording"&&!e.disableLogs&&console.warn("Stop an active recorder."),f&&typeof f.clearRecordedData=="function"&&f.clearRecordedData(),f=null,v("inactive"),t.blob=null},onStateChanged:function(n){e.disableLogs||console.log("Recorder state changed:",n)},state:"inactive",getState:function(){return t.state},destroy:function(){var n=e.disableLogs;e={disableLogs:!0},t.reset(),v("destroyed"),R=t=null,oe.AudioContextConstructor&&(oe.AudioContextConstructor.close(),oe.AudioContextConstructor=null),e.disableLogs=n,e.disableLogs||console.log("RecordRTC is destroyed.")},version:"5.6.2"};if(!this)return t=R,R;for(var T in R)this[T]=R[T];return t=this,R}S.version="5.6.2",Te.exports=S,S.getFromDisk=function(o,e){if(!e)throw"callback is mandatory.";console.log("Getting recorded "+(o==="all"?"blobs":o+" blob ")+" from disk!"),W.Fetch(function(t,a){o!=="all"&&a===o+"Blob"&&e&&e(t),o==="all"&&e&&e(t,a.replace("Blob",""))})},S.writeToDisk=function(o){console.log("Writing recorded blob(s) to disk!"),o=o||{},o.audio&&o.video&&o.gif?o.audio.getDataURL(function(e){o.video.getDataURL(function(t){o.gif.getDataURL(function(a){W.Store({audioBlob:e,videoBlob:t,gifBlob:a})})})}):o.audio&&o.video?o.audio.getDataURL(function(e){o.video.getDataURL(function(t){W.Store({audioBlob:e,videoBlob:t})})}):o.audio&&o.gif?o.audio.getDataURL(function(e){o.gif.getDataURL(function(t){W.Store({audioBlob:e,gifBlob:t})})}):o.video&&o.gif?o.video.getDataURL(function(e){o.gif.getDataURL(function(t){W.Store({videoBlob:e,gifBlob:t})})}):o.audio?o.audio.getDataURL(function(e){W.Store({audioBlob:e})}):o.video?o.video.getDataURL(function(e){W.Store({videoBlob:e})}):o.gif&&o.gif.getDataURL(function(e){W.Store({gifBlob:e})})};/**
 * {@link RecordRTCConfiguration} is an inner/private helper for {@link RecordRTC}.
 * @summary It configures the 2nd parameter passed over {@link RecordRTC} and returns a valid "config" object.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef RecordRTCConfiguration
 * @class
 * @example
 * var options = RecordRTCConfiguration(mediaStream, options);
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.
 * @param {object} config - {type:"video", disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, getNativeBlob:true, etc.}
 */function Ce(o,e){return!e.recorderType&&!e.type&&(e.audio&&e.video?e.type="video":e.audio&&!e.video&&(e.type="audio")),e.recorderType&&!e.type&&(e.recorderType===ue||e.recorderType===ce||typeof ne<"u"&&e.recorderType===ne?e.type="video":e.recorderType===fe?e.type="gif":e.recorderType===de?e.type="audio":e.recorderType===P&&(A(o,"audio").length&&A(o,"video").length||!A(o,"audio").length&&A(o,"video").length?e.type="video":A(o,"audio").length&&!A(o,"video").length&&(e.type="audio"))),typeof P<"u"&&typeof MediaRecorder<"u"&&"requestData"in MediaRecorder.prototype&&(e.mimeType||(e.mimeType="video/webm"),e.type||(e.type=e.mimeType.split("/")[0]),e.bitsPerSecond),e.type||(e.mimeType&&(e.type=e.mimeType.split("/")[0]),e.type||(e.type="audio")),e}/**
 * {@link GetRecorderType} is an inner/private helper for {@link RecordRTC}.
 * @summary It returns best recorder-type available for your browser.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef GetRecorderType
 * @class
 * @example
 * var RecorderType = GetRecorderType(options);
 * var recorder = new RecorderType(options);
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.
 * @param {object} config - {type:"video", disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, etc.}
 */function Fe(o,e){var t;return(Q||pe||ae)&&(t=de),typeof MediaRecorder<"u"&&"requestData"in MediaRecorder.prototype&&!Q&&(t=P),e.type==="video"&&(Q||ae)&&(t=ue,typeof ne<"u"&&typeof ReadableStream<"u"&&(t=ne)),e.type==="gif"&&(t=fe),e.type==="canvas"&&(t=ce),$()&&t!==ce&&t!==fe&&typeof MediaRecorder<"u"&&"requestData"in MediaRecorder.prototype&&(A(o,"video").length||A(o,"audio").length)&&(e.type==="audio"?typeof MediaRecorder.isTypeSupported=="function"&&MediaRecorder.isTypeSupported("audio/webm")&&(t=P):typeof MediaRecorder.isTypeSupported=="function"&&MediaRecorder.isTypeSupported("video/webm")&&(t=P)),o instanceof Array&&o.length&&(t=Be),e.recorderType&&(t=e.recorderType),!e.disableLogs&&t&&t.name&&console.log("Using recorderType:",t.name||t.constructor.name),!t&&se&&(t=P),t}/**
 * MRecordRTC runs on top of {@link RecordRTC} to bring multiple recordings in a single place, by providing simple API.
 * @summary MRecordRTC stands for "Multiple-RecordRTC".
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef MRecordRTC
 * @class
 * @example
 * var recorder = new MRecordRTC();
 * recorder.addStream(MediaStream);
 * recorder.mediaType = {
 *     audio: true, // or StereoAudioRecorder or MediaStreamRecorder
 *     video: true, // or WhammyRecorder or MediaStreamRecorder or WebAssemblyRecorder or CanvasRecorder
 *     gif: true    // or GifRecorder
 * };
 * // mimeType is optional and should be set only in advance cases.
 * recorder.mimeType = {
 *     audio: 'audio/wav',
 *     video: 'video/webm',
 *     gif:   'image/gif'
 * };
 * recorder.startRecording();
 * @see For further information:
 * @see {@link https://github.com/muaz-khan/RecordRTC/tree/master/MRecordRTC|MRecordRTC Source Code}
 * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.
 * @requires {@link RecordRTC}
 */function ge(o){this.addStream=function(e){e&&(o=e)},this.mediaType={audio:!0,video:!0},this.startRecording=function(){var e=this.mediaType,t,a=this.mimeType||{audio:null,video:null,gif:null};if(typeof e.audio!="function"&&$()&&!A(o,"audio").length&&(e.audio=!1),typeof e.video!="function"&&$()&&!A(o,"video").length&&(e.video=!1),typeof e.gif!="function"&&$()&&!A(o,"video").length&&(e.gif=!1),!e.audio&&!e.video&&!e.gif)throw"MediaStream must have either audio or video tracks.";if(e.audio&&(t=null,typeof e.audio=="function"&&(t=e.audio),this.audioRecorder=new S(o,{type:"audio",bufferSize:this.bufferSize,sampleRate:this.sampleRate,numberOfAudioChannels:this.numberOfAudioChannels||2,disableLogs:this.disableLogs,recorderType:t,mimeType:a.audio,timeSlice:this.timeSlice,onTimeStamp:this.onTimeStamp}),e.video||this.audioRecorder.startRecording()),e.video){t=null,typeof e.video=="function"&&(t=e.video);var d=o;if($()&&e.audio&&typeof e.audio=="function"){var s=A(o,"video")[0];Me?(d=new G,d.addTrack(s),t&&t===ue&&(t=P)):(d=new G,d.addTrack(s))}this.videoRecorder=new S(d,{type:"video",video:this.video,canvas:this.canvas,frameInterval:this.frameInterval||10,disableLogs:this.disableLogs,recorderType:t,mimeType:a.video,timeSlice:this.timeSlice,onTimeStamp:this.onTimeStamp,workerPath:this.workerPath,webAssemblyPath:this.webAssemblyPath,frameRate:this.frameRate,bitrate:this.bitrate}),e.audio||this.videoRecorder.startRecording()}if(e.audio&&e.video){var u=this,r=$()===!0;(e.audio instanceof de&&e.video||e.audio!==!0&&e.video!==!0&&e.audio!==e.video)&&(r=!1),r===!0?(u.audioRecorder=null,u.videoRecorder.startRecording()):u.videoRecorder.initRecorder(function(){u.audioRecorder.initRecorder(function(){u.videoRecorder.startRecording(),u.audioRecorder.startRecording()})})}e.gif&&(t=null,typeof e.gif=="function"&&(t=e.gif),this.gifRecorder=new S(o,{type:"gif",frameRate:this.frameRate||200,quality:this.quality||10,disableLogs:this.disableLogs,recorderType:t,mimeType:a.gif}),this.gifRecorder.startRecording())},this.stopRecording=function(e){e=e||function(){},this.audioRecorder&&this.audioRecorder.stopRecording(function(t){e(t,"audio")}),this.videoRecorder&&this.videoRecorder.stopRecording(function(t){e(t,"video")}),this.gifRecorder&&this.gifRecorder.stopRecording(function(t){e(t,"gif")})},this.pauseRecording=function(){this.audioRecorder&&this.audioRecorder.pauseRecording(),this.videoRecorder&&this.videoRecorder.pauseRecording(),this.gifRecorder&&this.gifRecorder.pauseRecording()},this.resumeRecording=function(){this.audioRecorder&&this.audioRecorder.resumeRecording(),this.videoRecorder&&this.videoRecorder.resumeRecording(),this.gifRecorder&&this.gifRecorder.resumeRecording()},this.getBlob=function(e){var t={};return this.audioRecorder&&(t.audio=this.audioRecorder.getBlob()),this.videoRecorder&&(t.video=this.videoRecorder.getBlob()),this.gifRecorder&&(t.gif=this.gifRecorder.getBlob()),e&&e(t),t},this.destroy=function(){this.audioRecorder&&(this.audioRecorder.destroy(),this.audioRecorder=null),this.videoRecorder&&(this.videoRecorder.destroy(),this.videoRecorder=null),this.gifRecorder&&(this.gifRecorder.destroy(),this.gifRecorder=null)},this.getDataURL=function(e){this.getBlob(function(d){d.audio&&d.video?t(d.audio,function(s){t(d.video,function(u){e({audio:s,video:u})})}):d.audio?t(d.audio,function(s){e({audio:s})}):d.video&&t(d.video,function(s){e({video:s})})});function t(d,s){if(typeof Worker<"u"){var u=a(function(h){postMessage(new FileReaderSync().readAsDataURL(h))});u.onmessage=function(h){s(h.data)},u.postMessage(d)}else{var r=new FileReader;r.readAsDataURL(d),r.onload=function(h){s(h.target.result)}}}function a(d){var s=B.createObjectURL(new Blob([d.toString(),"this.onmessage =  function (eee) {"+d.name+"(eee.data);}"],{type:"application/javascript"})),u=new Worker(s),r;if(typeof B<"u")r=B;else if(typeof webkitURL<"u")r=webkitURL;else throw"Neither URL nor webkitURL detected.";return r.revokeObjectURL(s),u}},this.writeToDisk=function(){S.writeToDisk({audio:this.audioRecorder,video:this.videoRecorder,gif:this.gifRecorder})},this.save=function(e){e=e||{audio:!0,video:!0,gif:!0},e.audio&&this.audioRecorder&&this.audioRecorder.save(typeof e.audio=="string"?e.audio:""),e.video&&this.videoRecorder&&this.videoRecorder.save(typeof e.video=="string"?e.video:""),e.gif&&this.gifRecorder&&this.gifRecorder.save(typeof e.gif=="string"?e.gif:"")}}ge.getFromDisk=S.getFromDisk,ge.writeToDisk=S.writeToDisk,typeof S<"u"&&(S.MRecordRTC=ge);var je="Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45";(function(o){o&&(typeof window<"u"||typeof M>"u"||(M.navigator={userAgent:je,getUserMedia:function(){}},M.console||(M.console={}),(typeof M.console.log>"u"||typeof M.console.error>"u")&&(M.console.error=M.console.log=M.console.log||function(){console.log(arguments)}),typeof document>"u"&&(o.document={documentElement:{appendChild:function(){return""}}},document.createElement=document.captureStream=document.mozCaptureStream=function(){var e={getContext:function(){return e},play:function(){},pause:function(){},drawImage:function(){},toDataURL:function(){return""},style:{}};return e},o.HTMLVideoElement=function(){}),typeof location>"u"&&(o.location={protocol:"file:",href:"",hash:""}),typeof screen>"u"&&(o.screen={width:0,height:0}),typeof B>"u"&&(o.URL={createObjectURL:function(){return""},revokeObjectURL:function(){return""}}),o.window=M))})(typeof M<"u"?M:null);var Y=window.requestAnimationFrame;if(typeof Y>"u"){if(typeof webkitRequestAnimationFrame<"u")Y=webkitRequestAnimationFrame;else if(typeof mozRequestAnimationFrame<"u")Y=mozRequestAnimationFrame;else if(typeof msRequestAnimationFrame<"u")Y=msRequestAnimationFrame;else if(typeof Y>"u"){var Le=0;Y=function(o,e){var t=new Date().getTime(),a=Math.max(0,16-(t-Le)),d=setTimeout(function(){o(t+a)},a);return Le=t+a,d}}}var Z=window.cancelAnimationFrame;typeof Z>"u"&&(typeof webkitCancelAnimationFrame<"u"?Z=webkitCancelAnimationFrame:typeof mozCancelAnimationFrame<"u"?Z=mozCancelAnimationFrame:typeof msCancelAnimationFrame<"u"?Z=msCancelAnimationFrame:typeof Z>"u"&&(Z=function(o){clearTimeout(o)}));var ie=window.AudioContext;typeof ie>"u"&&(typeof webkitAudioContext<"u"&&(ie=webkitAudioContext),typeof mozAudioContext<"u"&&(ie=mozAudioContext));var B=window.URL;typeof B>"u"&&typeof webkitURL<"u"&&(B=webkitURL),typeof navigator<"u"&&typeof navigator.getUserMedia>"u"&&(typeof navigator.webkitGetUserMedia<"u"&&(navigator.getUserMedia=navigator.webkitGetUserMedia),typeof navigator.mozGetUserMedia<"u"&&(navigator.getUserMedia=navigator.mozGetUserMedia));var pe=navigator.userAgent.indexOf("Edge")!==-1&&(!!navigator.msSaveBlob||!!navigator.msSaveOrOpenBlob),ae=!!window.opera||navigator.userAgent.indexOf("OPR/")!==-1,Me=navigator.userAgent.toLowerCase().indexOf("firefox")>-1&&"netscape"in window&&/ rv:/.test(navigator.userAgent),Q=!ae&&!pe&&!!navigator.webkitGetUserMedia||Ue()||navigator.userAgent.toLowerCase().indexOf("chrome/")!==-1,se=/^((?!chrome|android).)*safari/i.test(navigator.userAgent);se&&!Q&&navigator.userAgent.indexOf("CriOS")!==-1&&(se=!1,Q=!0);var G=window.MediaStream;typeof G>"u"&&typeof webkitMediaStream<"u"&&(G=webkitMediaStream),typeof G<"u"&&typeof G.prototype.stop>"u"&&(G.prototype.stop=function(){this.getTracks().forEach(function(o){o.stop()})});function ve(o){var e=1e3,t=["Bytes","KB","MB","GB","TB"];if(o===0)return"0 Bytes";var a=parseInt(Math.floor(Math.log(o)/Math.log(e)),10);return(o/Math.pow(e,a)).toPrecision(3)+" "+t[a]}function Ae(o,e){if(!o)throw"Blob object is required.";if(!o.type)try{o.type="video/webm"}catch{}var t=(o.type||"video/webm").split("/")[1];if(t.indexOf(";")!==-1&&(t=t.split(";")[0]),e&&e.indexOf(".")!==-1){var a=e.split(".");e=a[0],t=a[1]}var d=(e||Math.round(Math.random()*9999999999)+888888888)+"."+t;if(typeof navigator.msSaveOrOpenBlob<"u")return navigator.msSaveOrOpenBlob(o,d);if(typeof navigator.msSaveBlob<"u")return navigator.msSaveBlob(o,d);var s=document.createElement("a");s.href=B.createObjectURL(o),s.download=d,s.style="display:none;opacity:0;color:transparent;",(document.body||document.documentElement).appendChild(s),typeof s.click=="function"?s.click():(s.target="_blank",s.dispatchEvent(new MouseEvent("click",{view:window,bubbles:!0,cancelable:!0}))),B.revokeObjectURL(s.href)}function Ue(){return!!(typeof window<"u"&&typeof window.process=="object"&&window.process.type==="renderer"||typeof process<"u"&&typeof process.versions=="object"&&process.versions.electron||typeof navigator=="object"&&typeof navigator.userAgent=="string"&&navigator.userAgent.indexOf("Electron")>=0)}function A(o,e){return!o||!o.getTracks?[]:o.getTracks().filter(function(t){return t.kind===(e||"audio")})}function De(o,e){"srcObject"in e?e.srcObject=o:"mozSrcObject"in e?e.mozSrcObject=o:e.srcObject=o}function Pe(o,e){if(typeof EBML>"u")throw new Error("Please link: https://www.webrtc-experiment.com/EBML.js");var t=new EBML.Reader,a=new EBML.Decoder,d=EBML.tools,s=new FileReader;s.onload=function(u){var r=a.decode(this.result);r.forEach(function(v){t.read(v)}),t.stop();var h=d.makeMetadataSeekable(t.metadatas,t.duration,t.cues),b=this.result.slice(t.metadataSize),l=new Blob([h,b],{type:"video/webm"});e(l)},s.readAsArrayBuffer(o)}typeof S<"u"&&(S.invokeSaveAsDialog=Ae,S.getTracks=A,S.getSeekableBlob=Pe,S.bytesToSize=ve,S.isElectron=Ue);/**
 * Storage is a standalone object used by {@link RecordRTC} to store reusable objects e.g. "new AudioContext".
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @example
 * Storage.AudioContext === webkitAudioContext
 * @property {webkitAudioContext} AudioContext - Keeps a reference to AudioContext object.
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 */var oe={};typeof ie<"u"?oe.AudioContext=ie:typeof webkitAudioContext<"u"&&(oe.AudioContext=webkitAudioContext),typeof S<"u"&&(S.Storage=oe);function $(){if(Me||se||pe)return!0;var o=navigator.userAgent,e=""+parseFloat(navigator.appVersion),t=parseInt(navigator.appVersion,10),a,d;return(Q||ae)&&(a=o.indexOf("Chrome"),e=o.substring(a+7)),(d=e.indexOf(";"))!==-1&&(e=e.substring(0,d)),(d=e.indexOf(" "))!==-1&&(e=e.substring(0,d)),t=parseInt(""+e,10),isNaN(t)&&(e=""+parseFloat(navigator.appVersion),t=parseInt(navigator.appVersion,10)),t>=49}/**
 * MediaStreamRecorder is an abstraction layer for {@link https://w3c.github.io/mediacapture-record/MediaRecorder.html|MediaRecorder API}. It is used by {@link RecordRTC} to record MediaStream(s) in both Chrome and Firefox.
 * @summary Runs top over {@link https://w3c.github.io/mediacapture-record/MediaRecorder.html|MediaRecorder API}.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://github.com/muaz-khan|Muaz Khan}
 * @typedef MediaStreamRecorder
 * @class
 * @example
 * var config = {
 *     mimeType: 'video/webm', // vp8, vp9, h264, mkv, opus/vorbis
 *     audioBitsPerSecond : 256 * 8 * 1024,
 *     videoBitsPerSecond : 256 * 8 * 1024,
 *     bitsPerSecond: 256 * 8 * 1024,  // if this is provided, skip above two
 *     checkForInactiveTracks: true,
 *     timeSlice: 1000, // concatenate intervals based blobs
 *     ondataavailable: function() {} // get intervals based blobs
 * }
 * var recorder = new MediaStreamRecorder(mediaStream, config);
 * recorder.record();
 * recorder.stop(function(blob) {
 *     video.src = URL.createObjectURL(blob);
 *
 *     // or
 *     var blob = recorder.blob;
 * });
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.
 * @param {object} config - {disableLogs:true, initCallback: function, mimeType: "video/webm", timeSlice: 1000}
 * @throws Will throw an error if first argument "MediaStream" is missing. Also throws error if "MediaRecorder API" are not supported by the browser.
 */function P(o,e){var l=this;if(typeof o>"u")throw'First argument "MediaStream" is required.';if(typeof MediaRecorder>"u")throw"Your browser does not support the Media Recorder API. Please try other modules e.g. WhammyRecorder or StereoAudioRecorder.";if(e=e||{mimeType:"video/webm"},e.type==="audio"){if(A(o,"video").length&&A(o,"audio").length){var t;navigator.mozGetUserMedia?(t=new G,t.addTrack(A(o,"audio")[0])):t=new G(A(o,"audio")),o=t}(!e.mimeType||e.mimeType.toString().toLowerCase().indexOf("audio")===-1)&&(e.mimeType=Q?"audio/webm":"audio/ogg"),e.mimeType&&e.mimeType.toString().toLowerCase()!=="audio/ogg"&&navigator.mozGetUserMedia&&(e.mimeType="audio/ogg")}var a=[];this.getArrayOfBlobs=function(){return a},this.record=function(){l.blob=null,l.clearRecordedData(),l.timestamps=[],b=[],a=[];var v=e;e.disableLogs||console.log("Passing following config over MediaRecorder API.",v),r&&(r=null),Q&&!$()&&(v="video/vp8"),typeof MediaRecorder.isTypeSupported=="function"&&v.mimeType&&(MediaRecorder.isTypeSupported(v.mimeType)||(e.disableLogs||console.warn("MediaRecorder API seems unable to record mimeType:",v.mimeType),v.mimeType=e.type==="audio"?"audio/webm":"video/webm"));try{r=new MediaRecorder(o,v),e.mimeType=v.mimeType}catch{r=new MediaRecorder(o)}v.mimeType&&!MediaRecorder.isTypeSupported&&"canRecordMimeType"in r&&r.canRecordMimeType(v.mimeType)===!1&&(e.disableLogs||console.warn("MediaRecorder API seems unable to record mimeType:",v.mimeType)),r.ondataavailable=function(m){if(m.data&&b.push("ondataavailable: "+ve(m.data.size)),typeof e.timeSlice=="number"){if(m.data&&m.data.size&&(a.push(m.data),d(),typeof e.ondataavailable=="function")){var p=e.getNativeBlob?m.data:new Blob([m.data],{type:s(v)});e.ondataavailable(p)}return}if(!m.data||!m.data.size||m.data.size<100||l.blob){l.recordingCallback&&(l.recordingCallback(new Blob([],{type:s(v)})),l.recordingCallback=null);return}l.blob=e.getNativeBlob?m.data:new Blob([m.data],{type:s(v)}),l.recordingCallback&&(l.recordingCallback(l.blob),l.recordingCallback=null)},r.onstart=function(){b.push("started")},r.onpause=function(){b.push("paused")},r.onresume=function(){b.push("resumed")},r.onstop=function(){b.push("stopped")},r.onerror=function(m){m&&(m.name||(m.name="UnknownError"),b.push("error: "+m),e.disableLogs||(m.name.toString().toLowerCase().indexOf("invalidstate")!==-1?console.error("The MediaRecorder is not in a state in which the proposed operation is allowed to be executed.",m):m.name.toString().toLowerCase().indexOf("notsupported")!==-1?console.error("MIME type (",v.mimeType,") is not supported.",m):m.name.toString().toLowerCase().indexOf("security")!==-1?console.error("MediaRecorder security error",m):m.name==="OutOfMemory"?console.error("The UA has exhaused the available memory. User agents SHOULD provide as much additional information as possible in the message attribute.",m):m.name==="IllegalStreamModification"?console.error("A modification to the stream has occurred that makes it impossible to continue recording. An example would be the addition of a Track while recording is occurring. User agents SHOULD provide as much additional information as possible in the message attribute.",m):m.name==="OtherRecordingError"?console.error("Used for an fatal error other than those listed above. User agents SHOULD provide as much additional information as possible in the message attribute.",m):m.name==="GenericError"?console.error("The UA cannot provide the codec or recording option that has been requested.",m):console.error("MediaRecorder Error",m)),function(p){if(!l.manuallyStopped&&r&&r.state==="inactive"){delete e.timeslice,r.start(10*60*1e3);return}setTimeout(p,1e3)}(),r.state!=="inactive"&&r.state!=="stopped"&&r.stop())},typeof e.timeSlice=="number"?(d(),r.start(e.timeSlice)):r.start(36e5),e.initCallback&&e.initCallback()},this.timestamps=[];function d(){l.timestamps.push(new Date().getTime()),typeof e.onTimeStamp=="function"&&e.onTimeStamp(l.timestamps[l.timestamps.length-1],l.timestamps)}function s(v){return r&&r.mimeType?r.mimeType:v.mimeType||"video/webm"}this.stop=function(v){v=v||function(){},l.manuallyStopped=!0,r&&(this.recordingCallback=v,r.state==="recording"&&r.stop(),typeof e.timeSlice=="number"&&setTimeout(function(){l.blob=new Blob(a,{type:s(e)}),l.recordingCallback(l.blob)},100))},this.pause=function(){r&&r.state==="recording"&&r.pause()},this.resume=function(){r&&r.state==="paused"&&r.resume()},this.clearRecordedData=function(){r&&r.state==="recording"&&l.stop(u),u()};function u(){a=[],r=null,l.timestamps=[]}var r;this.getInternalRecorder=function(){return r};function h(){if("active"in o){if(!o.active)return!1}else if("ended"in o&&o.ended)return!1;return!0}this.blob=null,this.getState=function(){return r&&r.state||"inactive"};var b=[];this.getAllStates=function(){return b},typeof e.checkForInactiveTracks>"u"&&(e.checkForInactiveTracks=!1);var l=this;(function v(){if(!(!r||e.checkForInactiveTracks===!1)){if(h()===!1){e.disableLogs||console.log("MediaStream seems stopped."),l.stop();return}setTimeout(v,1e3)}})(),this.name="MediaStreamRecorder",this.toString=function(){return this.name}}typeof S<"u"&&(S.MediaStreamRecorder=P);/**
 * StereoAudioRecorder is a standalone class used by {@link RecordRTC} to bring "stereo" audio-recording in chrome.
 * @summary JavaScript standalone object for stereo audio recording.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef StereoAudioRecorder
 * @class
 * @example
 * var recorder = new StereoAudioRecorder(MediaStream, {
 *     sampleRate: 44100,
 *     bufferSize: 4096
 * });
 * recorder.record();
 * recorder.stop(function(blob) {
 *     video.src = URL.createObjectURL(blob);
 * });
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.
 * @param {object} config - {sampleRate: 44100, bufferSize: 4096, numberOfAudioChannels: 1, etc.}
 */function de(o,e){if(!A(o,"audio").length)throw"Your stream has no audio tracks.";e=e||{};var t=this,a=[],d=[],s=!1,u=0,r,h=2,b=e.desiredSampRate;e.leftChannel===!0&&(h=1),e.numberOfAudioChannels===1&&(h=1),(!h||h<1)&&(h=2),e.disableLogs||console.log("StereoAudioRecorder is set to record number of channels: "+h),typeof e.checkForInactiveTracks>"u"&&(e.checkForInactiveTracks=!0);function l(){if(e.checkForInactiveTracks===!1)return!0;if("active"in o){if(!o.active)return!1}else if("ended"in o&&o.ended)return!1;return!0}this.record=function(){if(l()===!1)throw"Please make sure MediaStream is active.";k(),c=g=!1,s=!0,typeof e.timeSlice<"u"&&L()};function v(C,O){function U(D,re){var q=D.numberOfAudioChannels,F=D.leftBuffers.slice(0),X=D.rightBuffers.slice(0),V=D.sampleRate,_=D.internalInterleavedLength,j=D.desiredSampRate;q===2&&(F=ye(F,_),X=ye(X,_),j&&(F=ee(F,j,V),X=ee(X,j,V))),q===1&&(F=ye(F,_),j&&(F=ee(F,j,V))),j&&(V=j);function ee(x,H,z){var N=Math.round(x.length*(H/z)),I=[],K=Number((x.length-1)/(N-1));I[0]=x[0];for(var te=1;te<N-1;te++){var ke=te*K,Ie=Number(Math.floor(ke)).toFixed(),Ve=Number(Math.ceil(ke)).toFixed(),He=ke-Ie;I[te]=we(x[Ie],x[Ve],He)}return I[N-1]=x[x.length-1],I}function we(x,H,z){return x+(H-x)*z}function ye(x,H){for(var z=new Float64Array(H),N=0,I=x.length,K=0;K<I;K++){var te=x[K];z.set(te,N),N+=te.length}return z}function Ne(x,H){for(var z=x.length+H.length,N=new Float64Array(z),I=0,K=0;K<z;)N[K++]=x[I],N[K++]=H[I],I++;return N}function le(x,H,z){for(var N=z.length,I=0;I<N;I++)x.setUint8(H+I,z.charCodeAt(I))}var he;q===2&&(he=Ne(F,X)),q===1&&(he=F);var me=he.length,Ge=44+me*2,Re=new ArrayBuffer(Ge),E=new DataView(Re);le(E,0,"RIFF"),E.setUint32(4,36+me*2,!0),le(E,8,"WAVE"),le(E,12,"fmt "),E.setUint32(16,16,!0),E.setUint16(20,1,!0),E.setUint16(22,q,!0),E.setUint32(24,V,!0),E.setUint32(28,V*q*2,!0),E.setUint16(32,q*2,!0),E.setUint16(34,16,!0),le(E,36,"data"),E.setUint32(40,me*2,!0);for(var We=me,Ee=44,qe=1,Se=0;Se<We;Se++)E.setInt16(Ee,he[Se]*(32767*qe),!0),Ee+=2;if(re)return re({buffer:Re,view:E});postMessage({buffer:Re,view:E})}if(C.noWorker){U(C,function(D){O(D.buffer,D.view)});return}var J=m(U);J.onmessage=function(D){O(D.data.buffer,D.data.view),B.revokeObjectURL(J.workerURL),J.terminate()},J.postMessage(C)}function m(C){var O=B.createObjectURL(new Blob([C.toString(),";this.onmessage =  function (eee) {"+C.name+"(eee.data);}"],{type:"application/javascript"})),U=new Worker(O);return U.workerURL=O,U}this.stop=function(C){C=C||function(){},s=!1,v({desiredSampRate:b,sampleRate:n,numberOfAudioChannels:h,internalInterleavedLength:u,leftBuffers:a,rightBuffers:h===1?[]:d,noWorker:e.noWorker},function(O,U){t.blob=new Blob([U],{type:"audio/wav"}),t.buffer=new ArrayBuffer(U.buffer.byteLength),t.view=U,t.sampleRate=b||n,t.bufferSize=T,t.length=u,c=!1,C&&C(t.blob)})},typeof S.Storage>"u"&&(S.Storage={AudioContextConstructor:null,AudioContext:window.AudioContext||window.webkitAudioContext}),(!S.Storage.AudioContextConstructor||S.Storage.AudioContextConstructor.state==="closed")&&(S.Storage.AudioContextConstructor=new S.Storage.AudioContext);var p=S.Storage.AudioContextConstructor,f=p.createMediaStreamSource(o),R=[0,256,512,1024,2048,4096,8192,16384],T=typeof e.bufferSize>"u"?4096:e.bufferSize;if(R.indexOf(T)===-1&&(e.disableLogs||console.log("Legal values for buffer-size are "+JSON.stringify(R,null,"	"))),p.createJavaScriptNode)r=p.createJavaScriptNode(T,h,h);else if(p.createScriptProcessor)r=p.createScriptProcessor(T,h,h);else throw"WebAudio API has no support on this browser.";f.connect(r),e.bufferSize||(T=r.bufferSize);var n=typeof e.sampleRate<"u"?e.sampleRate:p.sampleRate||44100;(n<22050||n>96e3)&&(e.disableLogs||console.log("sample-rate must be under range 22050 and 96000.")),e.disableLogs||e.desiredSampRate&&console.log("Desired sample-rate: "+e.desiredSampRate);var g=!1;this.pause=function(){g=!0},this.resume=function(){if(l()===!1)throw"Please make sure MediaStream is active.";if(!s){e.disableLogs||console.log("Seems recording has been restarted."),this.record();return}g=!1},this.clearRecordedData=function(){e.checkForInactiveTracks=!1,s&&this.stop(i),i()};function k(){a=[],d=[],u=0,c=!1,s=!1,g=!1,p=null,t.leftchannel=a,t.rightchannel=d,t.numberOfAudioChannels=h,t.desiredSampRate=b,t.sampleRate=n,t.recordingLength=u,y={left:[],right:[],recordingLength:0}}function i(){r&&(r.onaudioprocess=null,r.disconnect(),r=null),f&&(f.disconnect(),f=null),k()}this.name="StereoAudioRecorder",this.toString=function(){return this.name};var c=!1;function w(C){if(!g){if(l()===!1&&(e.disableLogs||console.log("MediaStream seems stopped."),r.disconnect(),s=!1),!s){f&&(f.disconnect(),f=null);return}c||(c=!0,e.onAudioProcessStarted&&e.onAudioProcessStarted(),e.initCallback&&e.initCallback());var O=C.inputBuffer.getChannelData(0),U=new Float32Array(O);if(a.push(U),h===2){var J=C.inputBuffer.getChannelData(1),D=new Float32Array(J);d.push(D)}u+=T,t.recordingLength=u,typeof e.timeSlice<"u"&&(y.recordingLength+=T,y.left.push(U),h===2&&y.right.push(D))}}r.onaudioprocess=w,p.createMediaStreamDestination?r.connect(p.createMediaStreamDestination()):r.connect(p.destination),this.leftchannel=a,this.rightchannel=d,this.numberOfAudioChannels=h,this.desiredSampRate=b,this.sampleRate=n,t.recordingLength=u;var y={left:[],right:[],recordingLength:0};function L(){!s||typeof e.ondataavailable!="function"||typeof e.timeSlice>"u"||(y.left.length?(v({desiredSampRate:b,sampleRate:n,numberOfAudioChannels:h,internalInterleavedLength:y.recordingLength,leftBuffers:y.left,rightBuffers:h===1?[]:y.right},function(C,O){var U=new Blob([O],{type:"audio/wav"});e.ondataavailable(U),setTimeout(L,e.timeSlice)}),y={left:[],right:[],recordingLength:0}):setTimeout(L,e.timeSlice))}}typeof S<"u"&&(S.StereoAudioRecorder=de);/**
 * CanvasRecorder is a standalone class used by {@link RecordRTC} to bring HTML5-Canvas recording into video WebM. It uses HTML2Canvas library and runs top over {@link Whammy}.
 * @summary HTML2Canvas recording into video WebM.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef CanvasRecorder
 * @class
 * @example
 * var recorder = new CanvasRecorder(htmlElement, { disableLogs: true, useWhammyRecorder: true });
 * recorder.record();
 * recorder.stop(function(blob) {
 *     video.src = URL.createObjectURL(blob);
 * });
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {HTMLElement} htmlElement - querySelector/getElementById/getElementsByTagName[0]/etc.
 * @param {object} config - {disableLogs:true, initCallback: function}
 */function ce(o,e){if(typeof html2canvas>"u")throw"Please link: https://www.webrtc-experiment.com/screenshot.js";e=e||{},e.frameInterval||(e.frameInterval=10);var t=!1;["captureStream","mozCaptureStream","webkitCaptureStream"].forEach(function(R){R in document.createElement("canvas")&&(t=!0)});var a=(!!window.webkitRTCPeerConnection||!!window.webkitGetUserMedia)&&!!window.chrome,d=50,s=navigator.userAgent.match(/Chrom(e|ium)\/([0-9]+)\./);a&&s&&s[2]&&(d=parseInt(s[2],10)),a&&d<52&&(t=!1),e.useWhammyRecorder&&(t=!1);var u,r;if(t)if(e.disableLogs||console.log("Your browser supports both MediRecorder API and canvas.captureStream!"),o instanceof HTMLCanvasElement)u=o;else if(o instanceof CanvasRenderingContext2D)u=o.canvas;else throw"Please pass either HTMLCanvasElement or CanvasRenderingContext2D.";else navigator.mozGetUserMedia&&(e.disableLogs||console.error("Canvas recording is NOT supported in Firefox."));var h;this.record=function(){if(h=!0,t&&!e.useWhammyRecorder){var R;"captureStream"in u?R=u.captureStream(25):"mozCaptureStream"in u?R=u.mozCaptureStream(25):"webkitCaptureStream"in u&&(R=u.webkitCaptureStream(25));try{var T=new G;T.addTrack(A(R,"video")[0]),R=T}catch{}if(!R)throw"captureStream API are NOT available.";r=new P(R,{mimeType:e.mimeType||"video/webm"}),r.record()}else f.frames=[],p=new Date().getTime(),m();e.initCallback&&e.initCallback()},this.getWebPImages=function(R){if(o.nodeName.toLowerCase()!=="canvas"){R();return}var T=f.frames.length;f.frames.forEach(function(n,g){var k=T-g;e.disableLogs||console.log(k+"/"+T+" frames remaining"),e.onEncodingCallback&&e.onEncodingCallback(k,T);var i=n.image.toDataURL("image/webp",1);f.frames[g].image=i}),e.disableLogs||console.log("Generating WebM"),R()},this.stop=function(R){h=!1;var T=this;if(t&&r){r.stop(R);return}this.getWebPImages(function(){f.compile(function(n){e.disableLogs||console.log("Recording finished!"),T.blob=n,T.blob.forEach&&(T.blob=new Blob([],{type:"video/webm"})),R&&R(T.blob),f.frames=[]})})};var b=!1;this.pause=function(){if(b=!0,r instanceof P){r.pause();return}},this.resume=function(){if(b=!1,r instanceof P){r.resume();return}h||this.record()},this.clearRecordedData=function(){h&&this.stop(l),l()};function l(){f.frames=[],h=!1,b=!1}this.name="CanvasRecorder",this.toString=function(){return this.name};function v(){var R=document.createElement("canvas"),T=R.getContext("2d");return R.width=o.width,R.height=o.height,T.drawImage(o,0,0),R}function m(){if(b)return p=new Date().getTime(),setTimeout(m,500);if(o.nodeName.toLowerCase()==="canvas"){var R=new Date().getTime()-p;p=new Date().getTime(),f.frames.push({image:v(),duration:R}),h&&setTimeout(m,e.frameInterval);return}html2canvas(o,{grabMouse:typeof e.showMousePointer>"u"||e.showMousePointer,onrendered:function(T){var n=new Date().getTime()-p;if(!n)return setTimeout(m,e.frameInterval);p=new Date().getTime(),f.frames.push({image:T.toDataURL("image/webp",1),duration:n}),h&&setTimeout(m,e.frameInterval)}})}var p=new Date().getTime(),f=new be.Video(100)}typeof S<"u"&&(S.CanvasRecorder=ce);/**
 * WhammyRecorder is a standalone class used by {@link RecordRTC} to bring video recording in Chrome. It runs top over {@link Whammy}.
 * @summary Video recording feature in Chrome.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef WhammyRecorder
 * @class
 * @example
 * var recorder = new WhammyRecorder(mediaStream);
 * recorder.record();
 * recorder.stop(function(blob) {
 *     video.src = URL.createObjectURL(blob);
 * });
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.
 * @param {object} config - {disableLogs: true, initCallback: function, video: HTMLVideoElement, etc.}
 */function ue(o,e){e=e||{},e.frameInterval||(e.frameInterval=10),e.disableLogs||console.log("Using frames-interval:",e.frameInterval),this.record=function(){e.width||(e.width=320),e.height||(e.height=240),e.video||(e.video={width:e.width,height:e.height}),e.canvas||(e.canvas={width:e.width,height:e.height}),h.width=e.canvas.width||320,h.height=e.canvas.height||240,b=h.getContext("2d"),e.video&&e.video instanceof HTMLVideoElement?(l=e.video.cloneNode(),e.initCallback&&e.initCallback()):(l=document.createElement("video"),De(o,l),l.onloadedmetadata=function(){e.initCallback&&e.initCallback()},l.width=e.video.width,l.height=e.video.height),l.muted=!0,l.play(),v=new Date().getTime(),m=new be.Video,e.disableLogs||(console.log("canvas resolutions",h.width,"*",h.height),console.log("video width/height",l.width||h.width,"*",l.height||h.height)),t(e.frameInterval)};function t(p){p=typeof p<"u"?p:10;var f=new Date().getTime()-v;if(!f)return setTimeout(t,p,p);if(u)return v=new Date().getTime(),setTimeout(t,100);v=new Date().getTime(),l.paused&&l.play(),b.drawImage(l,0,0,h.width,h.height),m.frames.push({duration:f,image:h.toDataURL("image/webp")}),s||setTimeout(t,p,p)}function a(p){var f=-1,R=p.length;(function T(){if(f++,f===R){p.callback();return}setTimeout(function(){p.functionToLoop(T,f)},1)})()}function d(p,f,R,T,n){var g=document.createElement("canvas");g.width=h.width,g.height=h.height;var k=g.getContext("2d"),i=[],c=f===-1,w=f&&f>0&&f<=p.length?f:p.length,y={r:0,g:0,b:0},L=Math.sqrt(Math.pow(255,2)+Math.pow(255,2)+Math.pow(255,2)),C=R&&R>=0&&R<=1?R:0,O=T&&T>=0&&T<=1?T:0,U=!1;a({length:w,functionToLoop:function(J,D){var re,q,F,X=function(){!U&&F-re<=F*O||(c&&(U=!0),i.push(p[D])),J()};if(U)X();else{var V=new Image;V.onload=function(){k.drawImage(V,0,0,h.width,h.height);var _=k.getImageData(0,0,h.width,h.height);re=0,q=_.data.length,F=_.data.length/4;for(var j=0;j<q;j+=4){var ee={r:_.data[j],g:_.data[j+1],b:_.data[j+2]},we=Math.sqrt(Math.pow(ee.r-y.r,2)+Math.pow(ee.g-y.g,2)+Math.pow(ee.b-y.b,2));we<=L*C&&re++}X()},V.src=p[D].image}},callback:function(){i=i.concat(p.slice(w)),i.length<=0&&i.push(p[p.length-1]),n(i)}})}var s=!1;this.stop=function(p){p=p||function(){},s=!0;var f=this;setTimeout(function(){d(m.frames,-1,null,null,function(R){m.frames=R,e.advertisement&&e.advertisement.length&&(m.frames=e.advertisement.concat(m.frames)),m.compile(function(T){f.blob=T,f.blob.forEach&&(f.blob=new Blob([],{type:"video/webm"})),p&&p(f.blob)})})},10)};var u=!1;this.pause=function(){u=!0},this.resume=function(){u=!1,s&&this.record()},this.clearRecordedData=function(){s||this.stop(r),r()};function r(){m.frames=[],s=!0,u=!1}this.name="WhammyRecorder",this.toString=function(){return this.name};var h=document.createElement("canvas"),b=h.getContext("2d"),l,v,m}typeof S<"u"&&(S.WhammyRecorder=ue);/**
 * Whammy is a standalone class used by {@link RecordRTC} to bring video recording in Chrome. It is written by {@link https://github.com/antimatter15|antimatter15}
 * @summary A real time javascript webm encoder based on a canvas hack.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef Whammy
 * @class
 * @example
 * var recorder = new Whammy().Video(15);
 * recorder.add(context || canvas || dataURL);
 * var output = recorder.compile();
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 */var be=function(){function o(a){this.frames=[],this.duration=a||1,this.quality=.8}o.prototype.add=function(a,d){if("canvas"in a&&(a=a.canvas),"toDataURL"in a&&(a=a.toDataURL("image/webp",this.quality)),!/^data:image\/webp;base64,/ig.test(a))throw"Input must be formatted properly as a base64 encoded DataURI of type image/webp";this.frames.push({image:a,duration:d||this.duration})};function e(a){var d=B.createObjectURL(new Blob([a.toString(),"this.onmessage =  function (eee) {"+a.name+"(eee.data);}"],{type:"application/javascript"})),s=new Worker(d);return B.revokeObjectURL(d),s}function t(a){function d(n){var g=u(n);if(!g)return[];for(var k=3e4,i=[{id:440786851,data:[{data:1,id:17030},{data:1,id:17143},{data:4,id:17138},{data:8,id:17139},{data:"webm",id:17026},{data:2,id:17031},{data:2,id:17029}]},{id:408125543,data:[{id:357149030,data:[{data:1e6,id:2807729},{data:"whammy",id:19840},{data:"whammy",id:22337},{data:R(g.duration),id:17545}]},{id:374648427,data:[{id:174,data:[{data:1,id:215},{data:1,id:29637},{data:0,id:156},{data:"und",id:2274716},{data:"V_VP8",id:134},{data:"VP8",id:2459272},{data:1,id:131},{id:224,data:[{data:g.width,id:176},{data:g.height,id:186}]}]}]}]}],c=0,w=0;c<n.length;){var y=[],L=0;do y.push(n[c]),L+=n[c].duration,c++;while(c<n.length&&L<k);var C=0,O={id:524531317,data:s(w,C,y)};i[1].data.push(O),w+=L}return l(i)}function s(n,g,k){return[{data:n,id:231}].concat(k.map(function(i){var c=v({discardable:0,frame:i.data.slice(4),invisible:0,keyframe:1,lacing:0,trackNum:1,timecode:Math.round(g)});return g+=i.duration,{data:c,id:163}}))}function u(n){if(!n[0]){postMessage({error:"Something went wrong. Maybe WebP format is not supported in the current browser."});return}for(var g=n[0].width,k=n[0].height,i=n[0].duration,c=1;c<n.length;c++)i+=n[c].duration;return{duration:i,width:g,height:k}}function r(n){for(var g=[];n>0;)g.push(n&255),n=n>>8;return new Uint8Array(g.reverse())}function h(n){return new Uint8Array(n.split("").map(function(g){return g.charCodeAt(0)}))}function b(n){var g=[],k=n.length%8?new Array(9-n.length%8).join("0"):"";n=k+n;for(var i=0;i<n.length;i+=8)g.push(parseInt(n.substr(i,8),2));return new Uint8Array(g)}function l(n){for(var g=[],k=0;k<n.length;k++){var i=n[k].data;typeof i=="object"&&(i=l(i)),typeof i=="number"&&(i=b(i.toString(2))),typeof i=="string"&&(i=h(i));var c=i.size||i.byteLength||i.length,w=Math.ceil(Math.ceil(Math.log(c)/Math.log(2))/8),y=c.toString(2),L=new Array(w*7+7+1-y.length).join("0")+y,C=new Array(w).join("0")+"1"+L;g.push(r(n[k].id)),g.push(b(C)),g.push(i)}return new Blob(g,{type:"video/webm"})}function v(n){var g=0;if(n.keyframe&&(g|=128),n.invisible&&(g|=8),n.lacing&&(g|=n.lacing<<1),n.discardable&&(g|=1),n.trackNum>127)throw"TrackNumber > 127 not supported";var k=[n.trackNum|128,n.timecode>>8,n.timecode&255,g].map(function(i){return String.fromCharCode(i)}).join("")+n.frame;return k}function m(n){for(var g=n.RIFF[0].WEBP[0],k=g.indexOf("*"),i=0,c=[];i<4;i++)c[i]=g.charCodeAt(k+3+i);var w,y,L;return L=c[1]<<8|c[0],w=L&16383,L=c[3]<<8|c[2],y=L&16383,{width:w,height:y,data:g,riff:n}}function p(n,g){return parseInt(n.substr(g+4,4).split("").map(function(k){var i=k.charCodeAt(0).toString(2);return new Array(8-i.length+1).join("0")+i}).join(""),2)}function f(n){for(var g=0,k={};g<n.length;){var i=n.substr(g,4),c=p(n,g),w=n.substr(g+4+4,c);g+=4+4+c,k[i]=k[i]||[],i==="RIFF"||i==="LIST"?k[i].push(f(w)):k[i].push(w)}return k}function R(n){return[].slice.call(new Uint8Array(new Float64Array([n]).buffer),0).map(function(g){return String.fromCharCode(g)}).reverse().join("")}var T=new d(a.map(function(n){var g=m(f(atob(n.image.slice(23))));return g.duration=n.duration,g}));postMessage(T)}return o.prototype.compile=function(a){var d=e(t);d.onmessage=function(s){if(s.data.error){console.error(s.data.error);return}a(s.data)},d.postMessage(this.frames)},{Video:o}}();typeof S<"u"&&(S.Whammy=be);/**
 * DiskStorage is a standalone object used by {@link RecordRTC} to store recorded blobs in IndexedDB storage.
 * @summary Writing blobs into IndexedDB.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @example
 * DiskStorage.Store({
 *     audioBlob: yourAudioBlob,
 *     videoBlob: yourVideoBlob,
 *     gifBlob  : yourGifBlob
 * });
 * DiskStorage.Fetch(function(dataURL, type) {
 *     if(type === 'audioBlob') { }
 *     if(type === 'videoBlob') { }
 *     if(type === 'gifBlob')   { }
 * });
 * // DiskStorage.dataStoreName = 'recordRTC';
 * // DiskStorage.onError = function(error) { };
 * @property {function} init - This method must be called once to initialize IndexedDB ObjectStore. Though, it is auto-used internally.
 * @property {function} Fetch - This method fetches stored blobs from IndexedDB.
 * @property {function} Store - This method stores blobs in IndexedDB.
 * @property {function} onError - This function is invoked for any known/unknown error.
 * @property {string} dataStoreName - Name of the ObjectStore created in IndexedDB storage.
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 */var W={init:function(){var o=this;if(typeof indexedDB>"u"||typeof indexedDB.open>"u"){console.error("IndexedDB API are not available in this browser.");return}var e=1,t=this.dbName||location.href.replace(/\/|:|#|%|\.|\[|\]/g,""),a,d=indexedDB.open(t,e);function s(r){r.createObjectStore(o.dataStoreName)}function u(){var r=a.transaction([o.dataStoreName],"readwrite");o.videoBlob&&r.objectStore(o.dataStoreName).put(o.videoBlob,"videoBlob"),o.gifBlob&&r.objectStore(o.dataStoreName).put(o.gifBlob,"gifBlob"),o.audioBlob&&r.objectStore(o.dataStoreName).put(o.audioBlob,"audioBlob");function h(b){r.objectStore(o.dataStoreName).get(b).onsuccess=function(l){o.callback&&o.callback(l.target.result,b)}}h("audioBlob"),h("videoBlob"),h("gifBlob")}d.onerror=o.onError,d.onsuccess=function(){if(a=d.result,a.onerror=o.onError,a.setVersion)if(a.version!==e){var r=a.setVersion(e);r.onsuccess=function(){s(a),u()}}else u();else u()},d.onupgradeneeded=function(r){s(r.target.result)}},Fetch:function(o){return this.callback=o,this.init(),this},Store:function(o){return this.audioBlob=o.audioBlob,this.videoBlob=o.videoBlob,this.gifBlob=o.gifBlob,this.init(),this},onError:function(o){console.error(JSON.stringify(o,null,"	"))},dataStoreName:"recordRTC",dbName:null};typeof S<"u"&&(S.DiskStorage=W);/**
 * GifRecorder is standalone calss used by {@link RecordRTC} to record video or canvas into animated gif.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef GifRecorder
 * @class
 * @example
 * var recorder = new GifRecorder(mediaStream || canvas || context, { onGifPreview: function, onGifRecordingStarted: function, width: 1280, height: 720, frameRate: 200, quality: 10 });
 * recorder.record();
 * recorder.stop(function(blob) {
 *     img.src = URL.createObjectURL(blob);
 * });
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStream} mediaStream - MediaStream object or HTMLCanvasElement or CanvasRenderingContext2D.
 * @param {object} config - {disableLogs:true, initCallback: function, width: 320, height: 240, frameRate: 200, quality: 10}
 */function fe(o,e){if(typeof GIFEncoder>"u"){var t=document.createElement("script");t.src="https://www.webrtc-experiment.com/gif-recorder.js",(document.body||document.documentElement).appendChild(t)}e=e||{};var a=o instanceof CanvasRenderingContext2D||o instanceof HTMLCanvasElement;this.record=function(){if(typeof GIFEncoder>"u"){setTimeout(p.record,1e3);return}if(!h){setTimeout(p.record,1e3);return}a||(e.width||(e.width=b.offsetWidth||320),e.height||(e.height=b.offsetHeight||240),e.video||(e.video={width:e.width,height:e.height}),e.canvas||(e.canvas={width:e.width,height:e.height}),u.width=e.canvas.width||320,u.height=e.canvas.height||240,b.width=e.video.width||320,b.height=e.video.height||240),m=new GIFEncoder,m.setRepeat(0),m.setDelay(e.frameRate||200),m.setQuality(e.quality||10),m.start(),typeof e.onGifRecordingStarted=="function"&&e.onGifRecordingStarted();function f(R){if(p.clearedRecordedData!==!0){if(d)return setTimeout(function(){f(R)},100);l=Y(f),typeof v===void 0&&(v=R),!(R-v<90)&&(!a&&b.paused&&b.play(),a||r.drawImage(b,0,0,u.width,u.height),e.onGifPreview&&e.onGifPreview(u.toDataURL("image/png")),m.addFrame(r),v=R)}}l=Y(f),e.initCallback&&e.initCallback()},this.stop=function(f){f=f||function(){},l&&Z(l),this.blob=new Blob([new Uint8Array(m.stream().bin)],{type:"image/gif"}),f(this.blob),m.stream().bin=[]};var d=!1;this.pause=function(){d=!0},this.resume=function(){d=!1},this.clearRecordedData=function(){p.clearedRecordedData=!0,s()};function s(){m&&(m.stream().bin=[])}this.name="GifRecorder",this.toString=function(){return this.name};var u=document.createElement("canvas"),r=u.getContext("2d");a&&(o instanceof CanvasRenderingContext2D?(r=o,u=r.canvas):o instanceof HTMLCanvasElement&&(r=o.getContext("2d"),u=o));var h=!0;if(!a){var b=document.createElement("video");b.muted=!0,b.autoplay=!0,b.playsInline=!0,h=!1,b.onloadedmetadata=function(){h=!0},De(o,b),b.play()}var l=null,v,m,p=this}typeof S<"u"&&(S.GifRecorder=fe);function xe(o,e){var t="Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45";(function(i){typeof S<"u"||i&&(typeof window<"u"||typeof M>"u"||(M.navigator={userAgent:t,getUserMedia:function(){}},M.console||(M.console={}),(typeof M.console.log>"u"||typeof M.console.error>"u")&&(M.console.error=M.console.log=M.console.log||function(){console.log(arguments)}),typeof document>"u"&&(i.document={documentElement:{appendChild:function(){return""}}},document.createElement=document.captureStream=document.mozCaptureStream=function(){var c={getContext:function(){return c},play:function(){},pause:function(){},drawImage:function(){},toDataURL:function(){return""},style:{}};return c},i.HTMLVideoElement=function(){}),typeof location>"u"&&(i.location={protocol:"file:",href:"",hash:""}),typeof screen>"u"&&(i.screen={width:0,height:0}),typeof b>"u"&&(i.URL={createObjectURL:function(){return""},revokeObjectURL:function(){return""}}),i.window=M))})(typeof M<"u"?M:null),e=e||"multi-streams-mixer";var a=[],d=!1,s=document.createElement("canvas"),u=s.getContext("2d");s.style.opacity=0,s.style.position="absolute",s.style.zIndex=-1,s.style.top="-1000em",s.style.left="-1000em",s.className=e,(document.body||document.documentElement).appendChild(s),this.disableLogs=!1,this.frameInterval=10,this.width=360,this.height=240,this.useGainNode=!0;var r=this,h=window.AudioContext;typeof h>"u"&&(typeof webkitAudioContext<"u"&&(h=webkitAudioContext),typeof mozAudioContext<"u"&&(h=mozAudioContext));var b=window.URL;typeof b>"u"&&typeof webkitURL<"u"&&(b=webkitURL),typeof navigator<"u"&&typeof navigator.getUserMedia>"u"&&(typeof navigator.webkitGetUserMedia<"u"&&(navigator.getUserMedia=navigator.webkitGetUserMedia),typeof navigator.mozGetUserMedia<"u"&&(navigator.getUserMedia=navigator.mozGetUserMedia));var l=window.MediaStream;typeof l>"u"&&typeof webkitMediaStream<"u"&&(l=webkitMediaStream),typeof l<"u"&&typeof l.prototype.stop>"u"&&(l.prototype.stop=function(){this.getTracks().forEach(function(i){i.stop()})});var v={};typeof h<"u"?v.AudioContext=h:typeof webkitAudioContext<"u"&&(v.AudioContext=webkitAudioContext);function m(i,c){"srcObject"in c?c.srcObject=i:"mozSrcObject"in c?c.mozSrcObject=i:c.srcObject=i}this.startDrawingFrames=function(){p()};function p(){if(!d){var i=a.length,c=!1,w=[];if(a.forEach(function(L){L.stream||(L.stream={}),L.stream.fullcanvas?c=L:w.push(L)}),c)s.width=c.stream.width,s.height=c.stream.height;else if(w.length){s.width=i>1?w[0].width*2:w[0].width;var y=1;(i===3||i===4)&&(y=2),(i===5||i===6)&&(y=3),(i===7||i===8)&&(y=4),(i===9||i===10)&&(y=5),s.height=w[0].height*y}else s.width=r.width||360,s.height=r.height||240;c&&c instanceof HTMLVideoElement&&f(c),w.forEach(function(L,C){f(L,C)}),setTimeout(p,r.frameInterval)}}function f(i,c){if(!d){var w=0,y=0,L=i.width,C=i.height;c===1&&(w=i.width),c===2&&(y=i.height),c===3&&(w=i.width,y=i.height),c===4&&(y=i.height*2),c===5&&(w=i.width,y=i.height*2),c===6&&(y=i.height*3),c===7&&(w=i.width,y=i.height*3),typeof i.stream.left<"u"&&(w=i.stream.left),typeof i.stream.top<"u"&&(y=i.stream.top),typeof i.stream.width<"u"&&(L=i.stream.width),typeof i.stream.height<"u"&&(C=i.stream.height),u.drawImage(i,w,y,L,C),typeof i.stream.onRender=="function"&&i.stream.onRender(u,w,y,L,C,c)}}function R(){d=!1;var i=T(),c=n();return c&&c.getTracks().filter(function(w){return w.kind==="audio"}).forEach(function(w){i.addTrack(w)}),o.forEach(function(w){w.fullcanvas}),i}function T(){k();var i;"captureStream"in s?i=s.captureStream():"mozCaptureStream"in s?i=s.mozCaptureStream():r.disableLogs||console.error("Upgrade to latest Chrome or otherwise enable this flag: chrome://flags/#enable-experimental-web-platform-features");var c=new l;return i.getTracks().filter(function(w){return w.kind==="video"}).forEach(function(w){c.addTrack(w)}),s.stream=c,c}function n(){v.AudioContextConstructor||(v.AudioContextConstructor=new v.AudioContext),r.audioContext=v.AudioContextConstructor,r.audioSources=[],r.useGainNode===!0&&(r.gainNode=r.audioContext.createGain(),r.gainNode.connect(r.audioContext.destination),r.gainNode.gain.value=0);var i=0;if(o.forEach(function(c){if(c.getTracks().filter(function(y){return y.kind==="audio"}).length){i++;var w=r.audioContext.createMediaStreamSource(c);r.useGainNode===!0&&w.connect(r.gainNode),r.audioSources.push(w)}}),!!i)return r.audioDestination=r.audioContext.createMediaStreamDestination(),r.audioSources.forEach(function(c){c.connect(r.audioDestination)}),r.audioDestination.stream}function g(i){var c=document.createElement("video");return m(i,c),c.className=e,c.muted=!0,c.volume=0,c.width=i.width||r.width||360,c.height=i.height||r.height||240,c.play(),c}this.appendStreams=function(i){if(!i)throw"First parameter is required.";i instanceof Array||(i=[i]),i.forEach(function(c){var w=new l;if(c.getTracks().filter(function(C){return C.kind==="video"}).length){var y=g(c);y.stream=c,a.push(y),w.addTrack(c.getTracks().filter(function(C){return C.kind==="video"})[0])}if(c.getTracks().filter(function(C){return C.kind==="audio"}).length){var L=r.audioContext.createMediaStreamSource(c);r.audioDestination=r.audioContext.createMediaStreamDestination(),L.connect(r.audioDestination),w.addTrack(r.audioDestination.stream.getTracks().filter(function(C){return C.kind==="audio"})[0])}o.push(w)})},this.releaseStreams=function(){a=[],d=!0,r.gainNode&&(r.gainNode.disconnect(),r.gainNode=null),r.audioSources.length&&(r.audioSources.forEach(function(i){i.disconnect()}),r.audioSources=[]),r.audioDestination&&(r.audioDestination.disconnect(),r.audioDestination=null),r.audioContext&&r.audioContext.close(),r.audioContext=null,u.clearRect(0,0,s.width,s.height),s.stream&&(s.stream.stop(),s.stream=null)},this.resetVideoStreams=function(i){i&&!(i instanceof Array)&&(i=[i]),k(i)};function k(i){a=[],i=i||o,i.forEach(function(c){if(c.getTracks().filter(function(y){return y.kind==="video"}).length){var w=g(c);w.stream=c,a.push(w)}})}this.name="MultiStreamsMixer",this.toString=function(){return this.name},this.getMixedStream=R}typeof S>"u"&&(Te.exports=xe);/**
 * MultiStreamRecorder can record multiple videos in single container.
 * @summary Multi-videos recorder.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef MultiStreamRecorder
 * @class
 * @example
 * var options = {
 *     mimeType: 'video/webm'
 * }
 * var recorder = new MultiStreamRecorder(ArrayOfMediaStreams, options);
 * recorder.record();
 * recorder.stop(function(blob) {
 *     video.src = URL.createObjectURL(blob);
 *
 *     // or
 *     var blob = recorder.blob;
 * });
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStreams} mediaStreams - Array of MediaStreams.
 * @param {object} config - {disableLogs:true, frameInterval: 1, mimeType: "video/webm"}
 */function Be(o,e){o=o||[];var t=this,a,d;e=e||{elementClass:"multi-streams-mixer",mimeType:"video/webm",video:{width:360,height:240}},e.frameInterval||(e.frameInterval=10),e.video||(e.video={}),e.video.width||(e.video.width=360),e.video.height||(e.video.height=240),this.record=function(){a=new xe(o,e.elementClass||"multi-streams-mixer"),s().length&&(a.frameInterval=e.frameInterval||10,a.width=e.video.width||360,a.height=e.video.height||240,a.startDrawingFrames()),e.previewStream&&typeof e.previewStream=="function"&&e.previewStream(a.getMixedStream()),d=new P(a.getMixedStream(),e),d.record()};function s(){var u=[];return o.forEach(function(r){A(r,"video").forEach(function(h){u.push(h)})}),u}this.stop=function(u){d&&d.stop(function(r){t.blob=r,u(r),t.clearRecordedData()})},this.pause=function(){d&&d.pause()},this.resume=function(){d&&d.resume()},this.clearRecordedData=function(){d&&(d.clearRecordedData(),d=null),a&&(a.releaseStreams(),a=null)},this.addStreams=function(u){if(!u)throw"First parameter is required.";u instanceof Array||(u=[u]),o.concat(u),!(!d||!a)&&(a.appendStreams(u),e.previewStream&&typeof e.previewStream=="function"&&e.previewStream(a.getMixedStream()))},this.resetVideoStreams=function(u){a&&(u&&!(u instanceof Array)&&(u=[u]),a.resetVideoStreams(u))},this.getMixer=function(){return a},this.name="MultiStreamRecorder",this.toString=function(){return this.name}}typeof S<"u"&&(S.MultiStreamRecorder=Be);/**
 * RecordRTCPromisesHandler adds promises support in {@link RecordRTC}. Try a {@link https://github.com/muaz-khan/RecordRTC/blob/master/simple-demos/RecordRTCPromisesHandler.html|demo here}
 * @summary Promises for {@link RecordRTC}
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef RecordRTCPromisesHandler
 * @class
 * @example
 * var recorder = new RecordRTCPromisesHandler(mediaStream, options);
 * recorder.startRecording()
 *         .then(successCB)
 *         .catch(errorCB);
 * // Note: You can access all RecordRTC API using "recorder.recordRTC" e.g. 
 * recorder.recordRTC.onStateChanged = function(state) {};
 * recorder.recordRTC.setRecordingDuration(5000);
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStream} mediaStream - Single media-stream object, array of media-streams, html-canvas-element, etc.
 * @param {object} config - {type:"video", recorderType: MediaStreamRecorder, disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, etc.}
 * @throws Will throw an error if "new" keyword is not used to initiate "RecordRTCPromisesHandler". Also throws error if first argument "MediaStream" is missing.
 * @requires {@link RecordRTC}
 */function ze(o,e){if(!this)throw'Use "new RecordRTCPromisesHandler()"';if(typeof o>"u")throw'First argument "MediaStream" is required.';var t=this;t.recordRTC=new S(o,e),this.startRecording=function(){return new Promise(function(a,d){try{t.recordRTC.startRecording(),a()}catch(s){d(s)}})},this.stopRecording=function(){return new Promise(function(a,d){try{t.recordRTC.stopRecording(function(s){if(t.blob=t.recordRTC.getBlob(),!t.blob||!t.blob.size){d("Empty blob.",t.blob);return}a(s)})}catch(s){d(s)}})},this.pauseRecording=function(){return new Promise(function(a,d){try{t.recordRTC.pauseRecording(),a()}catch(s){d(s)}})},this.resumeRecording=function(){return new Promise(function(a,d){try{t.recordRTC.resumeRecording(),a()}catch(s){d(s)}})},this.getDataURL=function(a){return new Promise(function(d,s){try{t.recordRTC.getDataURL(function(u){d(u)})}catch(u){s(u)}})},this.getBlob=function(){return new Promise(function(a,d){try{a(t.recordRTC.getBlob())}catch(s){d(s)}})},this.getInternalRecorder=function(){return new Promise(function(a,d){try{a(t.recordRTC.getInternalRecorder())}catch(s){d(s)}})},this.reset=function(){return new Promise(function(a,d){try{a(t.recordRTC.reset())}catch(s){d(s)}})},this.destroy=function(){return new Promise(function(a,d){try{a(t.recordRTC.destroy())}catch(s){d(s)}})},this.getState=function(){return new Promise(function(a,d){try{a(t.recordRTC.getState())}catch(s){d(s)}})},this.blob=null,this.version="5.6.2"}typeof S<"u"&&(S.RecordRTCPromisesHandler=ze);/**
 * WebAssemblyRecorder lets you create webm videos in JavaScript via WebAssembly. The library consumes raw RGBA32 buffers (4 bytes per pixel) and turns them into a webm video with the given framerate and quality. This makes it compatible out-of-the-box with ImageData from a CANVAS. With realtime mode you can also use webm-wasm for streaming webm videos.
 * @summary Video recording feature in Chrome, Firefox and maybe Edge.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef WebAssemblyRecorder
 * @class
 * @example
 * var recorder = new WebAssemblyRecorder(mediaStream);
 * recorder.record();
 * recorder.stop(function(blob) {
 *     video.src = URL.createObjectURL(blob);
 * });
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.
 * @param {object} config - {webAssemblyPath:'webm-wasm.wasm',workerPath: 'webm-worker.js', frameRate: 30, width: 1920, height: 1080, bitrate: 1024, realtime: true}
 */function ne(o,e){(typeof ReadableStream>"u"||typeof WritableStream>"u")&&console.error("Following polyfill is strongly recommended: https://unpkg.com/@mattiasbuelens/web-streams-polyfill/dist/polyfill.min.js"),e=e||{},e.width=e.width||640,e.height=e.height||480,e.frameRate=e.frameRate||30,e.bitrate=e.bitrate||1200,e.realtime=e.realtime||!0;var t;function a(){return new ReadableStream({start:function(b){var l=document.createElement("canvas"),v=document.createElement("video"),m=!0;v.srcObject=o,v.muted=!0,v.height=e.height,v.width=e.width,v.volume=0,v.onplaying=function(){l.width=e.width,l.height=e.height;var p=l.getContext("2d"),f=1e3/e.frameRate,R=setInterval(function(){if(t&&(clearInterval(R),b.close()),m&&(m=!1,e.onVideoProcessStarted&&e.onVideoProcessStarted()),p.drawImage(v,0,0),b._controlledReadableStream.state!=="closed")try{b.enqueue(p.getImageData(0,0,e.width,e.height))}catch{}},f)},v.play()}})}var d;function s(b,l){if(!e.workerPath&&!l){t=!1,fetch("https://unpkg.com/webm-wasm@latest/dist/webm-worker.js").then(function(m){m.arrayBuffer().then(function(p){s(b,p)})});return}if(!e.workerPath&&l instanceof ArrayBuffer){var v=new Blob([l],{type:"text/javascript"});e.workerPath=B.createObjectURL(v)}e.workerPath||console.error("workerPath parameter is missing."),d=new Worker(e.workerPath),d.postMessage(e.webAssemblyPath||"https://unpkg.com/webm-wasm@latest/dist/webm-wasm.wasm"),d.addEventListener("message",function(m){m.data==="READY"?(d.postMessage({width:e.width,height:e.height,bitrate:e.bitrate||1200,timebaseDen:e.frameRate||30,realtime:e.realtime}),a().pipeTo(new WritableStream({write:function(p){if(t){console.error("Got image, but recorder is finished!");return}d.postMessage(p.data.buffer,[p.data.buffer])}}))):m.data&&(u||h.push(m.data))})}this.record=function(){h=[],u=!1,this.blob=null,s(o),typeof e.initCallback=="function"&&e.initCallback()};var u;this.pause=function(){u=!0},this.resume=function(){u=!1};function r(b){if(!d){b&&b();return}d.addEventListener("message",function(l){l.data===null&&(d.terminate(),d=null,b&&b())}),d.postMessage(null)}var h=[];this.stop=function(b){t=!0;var l=this;r(function(){l.blob=new Blob(h,{type:"video/webm"}),b(l.blob)})},this.name="WebAssemblyRecorder",this.toString=function(){return this.name},this.clearRecordedData=function(){h=[],u=!1,this.blob=null},this.blob=null}typeof S<"u"&&(S.WebAssemblyRecorder=ne)})(Oe);var Ke=Oe.exports;const Ye=_e(Ke),pt=Object.freeze(Object.defineProperty({__proto__:null,default:Ye},Symbol.toStringTag,{value:"Module"}));export{pt as RecordRTC};
