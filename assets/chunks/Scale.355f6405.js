import{a,o as s,G as u,e as m,y as n,b as h}from"./index.3012fc8f.js";class i extends a{constructor(){super(Object.assign(s(i.getDefaults(),arguments,["value"]))),this.override=!1,this.name="Add",this._sum=new u({context:this.context}),this.input=this._sum,this.output=this._sum,this.addend=this._param,m(this._constantSource,this._sum)}static getDefaults(){return Object.assign(a.getDefaults(),{value:0})}dispose(){return super.dispose(),this._sum.dispose(),this}}class e extends n{constructor(){super(Object.assign(s(e.getDefaults(),arguments,["min","max"]))),this.name="Scale";const t=s(e.getDefaults(),arguments,["min","max"]);this._mult=this.input=new h({context:this.context,value:t.max-t.min}),this._add=this.output=new i({context:this.context,value:t.min}),this._min=t.min,this._max=t.max,this.input.connect(this.output)}static getDefaults(){return Object.assign(n.getDefaults(),{max:1,min:0})}get min(){return this._min}set min(t){this._min=t,this._setRange()}get max(){return this._max}set max(t){this._max=t,this._setRange()}_setRange(){this._add.value=this._min,this._mult.value=this._max-this._min}dispose(){return super.dispose(),this._add.dispose(),this._mult.dispose(),this}}export{i as A,e as S};
