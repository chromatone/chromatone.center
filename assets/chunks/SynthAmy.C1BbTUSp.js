import{r as T,e as F,B as m,C as A,E as r,R as c,W as E,V as h,L as w,a9 as C,U as v,J as _,F as O,G as M,w as q,o as D,_ as G}from"./framework.B_b_ZswS.js";import{F as d,u as f,am as W,be as B,bf as $,b2 as k,as as z}from"./theme.B095OEkU.js";const H={a:{name:"amp",type:"float",min:0,max:5,default:0,notes:"use after a note on is triggered with velocity to adjust amplitude without re-triggering the note"},A:{name:"bp0",type:"string",default:"100,0.5,150,0.25,200,0",notes:"in commas, like 100,0.5,150,0.25,200,0 -- envelope generator with alternating time(ms) and ratio. last pair triggers on note off"},B:{name:"bp1",type:"string",default:"100,0.5,150,0.25,200,0",notes:"set the second breakpoint generator. see breakpoint 0"},b:{name:"feedback",type:"float",min:0,max:1,default:0,notes:"use for the ALGO synthesis type in FM, or partial synthesis (for bandwidth) or for karplus-strong, or to indicate PCM looping (0 off, >0, on)"},C:{name:"bp2",type:"string",default:"100,0.5,150,0.25,200,0",notes:"3rd breakpoint generator"},d:{name:"duty",type:"float",min:.001,max:.999,default:.5,notes:"duty cycle for pulse wave, default 0.5"},D:{name:"debug",type:"uint",min:2,max:4,default:0,notes:"2 shows queue sample, 3 shows oscillator data, 4 shows modified oscillator. will interrupt audio!"},f:{name:"freq",type:"floats",min:0,max:14e3,default:220,notes:"frequency of oscillator"},F:{name:"filter_freq",type:"float",min:0,max:14e3,default:3e3,notes:"center frequency for biquad filter"},g:{name:"mod_target",type:"mask",min:0,max:64,default:0,notes:"Which parameter modulation/LFO controls. 1=amp, 2=duty, 4=freq, 8=filter freq, 16=resonance, 32=feedback. Can handle any combo, add them together"},G:{name:"filter_type",type:"uint",min:0,max:3,default:0,notes:"0 = none (default.) 1 = low pass, 2 = band pass, 3 = hi pass."},I:{name:"ratio",type:"float",min:0,max:1,default:.5,notes:"for ALGO types, where the base note frequency controls the modulators, or for the ALGO base note and PARTIALS base note, where the ratio controls the speed of the playback"},L:{name:"mod_source",type:"uint",min:0,max:1024,default:0,notes:"Which oscillator is used as an modulation/LFO source for this oscillator. Source oscillator will be silent."},l:{name:"vel",type:"floats",min:0,max:5,default:0,notes:"velocity - >0 to trigger note on, 0 to trigger note off. sets amplitude"},N:{name:"latency_ms",type:"uint",min:0,max:1e3,default:0,notes:"sets latency in ms. default 0"},n:{name:"note",type:"uint",min:1,max:127,default:60,notes:"midi note, sets frequency"},o:{name:"algorithm",type:"uint",min:1,max:32,default:1,notes:"DX7 algorith to use for ALGO type"},O:{name:"algo_source",type:"string",default:"0,1,2,3,4,-1",notes:"which oscillators to use for the algorithm. list of six, use -1 for not used, e.g 0,1,2,-1,-1-1"},p:{name:"patch",type:"uint",min:0,max:1024,default:16,notes:"choose a preloaded PCM sample, partial patch or FM patch number for ALGO waveforms."},P:{name:"phase",type:"floats",min:0,max:0,default:0,notes:"where in the oscillator's cycle to start sampling from (also works on the PCM buffer). default 0"},R:{name:"resonance",type:"float",min:0,max:10,default:0,notes:"q factor of biquad filter. in practice, 0-10.0. default 0.7"},S:{name:"reset",type:"uint",min:0,max:1024,default:0,notes:"resets given oscillator. set to > OSCS to reset all oscillators, gain and EQ"},T:{name:"bp0_target",type:"mask",min:0,max:128,default:0,notes:"Which parameter bp0 controls. 1=amp, 2=duty, 4=freq, 8=filter freq, 16=resonance, 32=feedback (can be added together). Can add 64 for linear ramp, otherwise exponential"},t:{name:"timestamp",type:"uint",min:0,max:1e3,default:0,notes:"ms of expected playback since some fixed start point on your host. you should always give this if you can."},v:{name:"osc",type:"uint",min:0,max:1024,default:0,notes:"which oscillator to control"},V:{name:"volume",type:"float",min:0,max:10,default:1,notes:"volume knob for entire synth, default 1.0"},w:{name:"wave",type:"uint",min:0,max:11,default:0,notes:"waveform: [0=SINE, PULSE, SAW_DOWN, SAW_UP, TRIANGLE, NOISE, KS, PCM, ALGO, PARTIAL, PARTIALS, OFF]. default: 0/SINE"},W:{name:"bp1_target",type:"mask",min:0,max:128,default:0,notes:"see bp0_target"},x:{name:"eq_l",type:"float",min:-15,max:15,default:0,notes:"in dB, fc=800Hz amount, -15 to 15. 0 is off. default 0."},X:{name:"bp2_target",type:"mask",min:0,max:128,default:0,notes:"see bp0_target"},y:{name:"eq_m",type:"float",min:-15,max:15,default:0,notes:"in dB, fc=2500Hz amount, -15 to 15. 0 is off. default 0."},z:{name:"eq_h",type:"float",min:-15,max:15,default:0,notes:"in dB, fc=7500Hz amount, -15 to 15. 0 is off. default 0."}},K={class:"p-2 rounded-xl border-1 m-2 select-none flex flex-wrap gap-2"},j={class:"p-2 rounded-xl border-1 m-2 select-none flex flex-wrap gap-4"},X={class:"p-4 flex items-center font-mono"},Y={class:"top-16 right-4 p-4 w-80 max-h-80vh overflow-hidden flex flex-col opacity-30 pointer-events-none font-mono text-sm fixed"},J={class:"font-bold border-b-2"},ae={__name:"SynthAmy",setup(Q){var V=!1,S=null,p=null,b=null,L=null;const e=T({started:!1,codes:H,message:F(()=>{const u=[];for(let t in e.knobs)u.push(`${t}${e.knobs[t]}`);return u.push("A0,0.2,150,1,250,0T59"),u.join("")}),waveforms:["SINE","PULSE","SAW_DOWN","SAW_UP","TRI","NOISE","KS","PCM","ALGO","PARTIAL","PARTIALS"],knobs:{p:d(f("amy-patch",248),0,1024),w:d(f("amy-waveform",7),0,11),V:d(f("amy-volume",1),0,10),d:d(f("amy-duty",.5),.001,.999),o:d(f("amy-algo",1),1,32),b:d(f("amy-feedback",0),0,1)},note:d(60,10,127),history:[]});function I(){q(()=>W.note,o=>{e.play(o.number,o.velocity/127)}),q(()=>e.message,o=>{p(o),e.history.unshift(o)}),B("a",()=>{e.play(e.note,1)}),$("a",()=>{e.play(e.note,0)}),k("ArrowLeft",()=>{e.knobs.patch--}),k("ArrowRight",()=>{e.knobs.patch++}),k("ArrowUp",o=>{o.preventDefault(),e.note++}),k("ArrowDown",o=>{o.preventDefault(),e.note--}),D(()=>{G(()=>import("./amyJS.DbXKzB8V.js"),[]).then(o=>{const{Module:n}=o;n.onRuntimeInitialized=function(){S=n.cwrap("web_audio_buffer","number",["number","number"]),p=n.cwrap("amy_play_message",null,["string"]),b=n.cwrap("amy_start_web",null,["number"])};var s=null,y=null,i=new Float32Array;L=function(x){if(s==null||s.length==0){i=new Float32Array(x.length);var P=i.length*i.BYTES_PER_ELEMENT;y=n._malloc(P),s=new Uint8Array(n.HEAPU8.buffer,y,P),s.set(new Uint8Array(i.buffer))}S(s.byteOffset,x.length);var R=new Float32Array(s.buffer,s.byteOffset,i.length);for(let g=0;g<x.length;g++)x[g]=R[g]}})});var u=!1,t=null,l=null,a=null;function U(o){var n=window.AudioContext||window.webkitAudioContext||!1;if(!n){console.error("No Audio");return}a=new n({sampleRate:48e3}),l=a.createBufferSource(),t=a.createScriptProcessor(256,0,1),t.onaudioprocess=function(s){o(s.outputBuffer.getChannelData(0))}}function N(){u||(b==null||b(),U(L),t.connect(a.destination),l.start(),u=!0,V=!0)}return e.play=(o,n=0)=>{V||N();let s=`v${o*20}`;if(n>0){let i=s+e.message;p(i),e.history.unshift(i)}let y=s+`n${o}l${n.toFixed(2)}`;e.history.unshift(y),p(y)},e.reset=(o=1e5)=>{let n=`S${o}`;e.history.unshift(n),p(n)},e}return I(),(u,t)=>{const l=z;return m(),A(O,null,[r("div",K,[c(C,{name:"fade"},{default:E(()=>[c(l,{min:0,max:11,param:"Wave",modelValue:e.knobs.w,"onUpdate:modelValue":t[0]||(t[0]=a=>e.knobs.w=a),fixed:0,unit:e.waveforms[e.knobs.w]},null,8,["modelValue","unit"]),e.knobs.w>6?(m(),h(l,{key:0,min:1,max:1024,param:"Patch",modelValue:e.knobs.p,"onUpdate:modelValue":t[1]||(t[1]=a=>e.knobs.p=a),fixed:0},null,8,["modelValue"])):w("",!0),e.knobs.w==1?(m(),h(l,{key:1,min:.001,max:.999,param:"Duty",step:.01,modelValue:e.knobs.d,"onUpdate:modelValue":t[2]||(t[2]=a=>e.knobs.d=a),fixed:2},null,8,["modelValue"])):w("",!0),e.knobs.w==8?(m(),h(l,{key:2,min:1,max:32,param:"ALGO",modelValue:e.knobs.o,"onUpdate:modelValue":t[3]||(t[3]=a=>e.knobs.o=a),fixed:0},null,8,["modelValue"])):w("",!0),e.knobs.w>5?(m(),h(l,{key:3,min:0,max:1,param:"Feedback",modelValue:e.knobs.b,"onUpdate:modelValue":t[4]||(t[4]=a=>e.knobs.b=a),fixed:1,step:.01},null,8,["modelValue"])):w("",!0),c(l,{min:0,max:10,param:"Volume",modelValue:e.knobs.V,"onUpdate:modelValue":t[5]||(t[5]=a=>e.knobs.V=a),fixed:1,step:.01},null,8,["modelValue"]),t[12]||(t[12]=r("div",{class:"flex-auto"},null,-1)),r("button",{class:"text-button",onClick:t[6]||(t[6]=a=>e.reset())},"RESET")]),_:1})]),r("div",j,[c(l,{min:1,max:127,param:"Note",modelValue:e.note,"onUpdate:modelValue":t[7]||(t[7]=a=>e.note=a),fixed:0,unit:"MIDI"},null,8,["modelValue"]),r("button",{class:"flex items-center gap-4 select-none p-4 rounded-xl bg-green-300 dark-bg-green-900 active-font-bold",onMousedown:t[8]||(t[8]=v(a=>e.play(e.note,1),["prevent","stop"])),onTouchstart:t[9]||(t[9]=v(a=>e.play(e.note,1),["prevent","stop"])),onMouseup:t[10]||(t[10]=v(a=>e.play(e.note,0),["prevent","stop"])),onTouchend:t[11]||(t[11]=v(a=>e.play(e.note,0),["prevent","stop"]))},t[13]||(t[13]=[r("div",{class:"i-la-play text-4xl"},null,-1)]),32)]),r("div",X,_(e.message),1),r("div",Y,[r("div",J,_(e.message),1),c(C,{name:"fade"},{default:E(()=>[(m(!0),A(O,null,M(e.history,a=>(m(),A("div",{class:"p-0",key:a},_(a),1))),128))]),_:1})])],64)}}};export{ae as default};
