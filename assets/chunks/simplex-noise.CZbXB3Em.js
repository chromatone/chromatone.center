const Q=Math.sqrt(3),X=.5*(Q-1),b=(3-Q)/6,N=a=>Math.floor(a)|0,P=new Float64Array([1,1,-1,1,1,-1,-1,-1,1,0,-1,0,1,0,-1,0,0,1,0,-1,0,1,0,-1]);function k(a=Math.random){const c=Y(a),n=new Float64Array(c).map(s=>P[s%12*2]),t=new Float64Array(c).map(s=>P[s%12*2+1]);return function(i,x){let G=0,M=0,D=0;const T=(i+x)*X,S=N(i+T),d=N(x+T),q=(S+d)*b,R=S-q,U=d-q,e=i-R,r=x-U;let m,p;e>r?(m=1,p=0):(m=0,p=1);const z=e-m+b,F=r-p+b,j=e-1+2*b,w=r-1+2*b,A=S&255,h=d&255;let l=.5-e*e-r*r;if(l>=0){const o=A+c[h],u=n[o],y=t[o];l*=l,G=l*l*(u*e+y*r)}let f=.5-z*z-F*F;if(f>=0){const o=A+m+c[h+p],u=n[o],y=t[o];f*=f,M=f*f*(u*z+y*F)}let g=.5-j*j-w*w;if(g>=0){const o=A+1+c[h+1],u=n[o],y=t[o];g*=g,D=g*g*(u*j+y*w)}return 70*(G+M+D)}}function Y(a){const n=new Uint8Array(512);for(let t=0;t<512/2;t++)n[t]=t;for(let t=0;t<512/2-1;t++){const s=t+~~(a()*(256-t)),i=n[t];n[t]=n[s],n[s]=i}for(let t=256;t<512;t++)n[t]=n[t-256];return n}export{k as c};
