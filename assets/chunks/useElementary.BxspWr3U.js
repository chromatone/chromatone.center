import{ay as n,az as w}from"./theme.rTQmAKbR.js";import{s as y,b as l,N as b,o as h,d as C,E as r}from"./framework.BX1Y-ISu.js";const t=y({initiating:!1,initiated:!1,started:!1,running:!1,ctx:null,core:null,node:null,layers:{}}),f=l({}),p=l({}),x=l({});function k(){return b()&&h(()=>{o()}),C(()=>t.layers,()=>{t.initiated&&d()}),{audio:t,initAudio:o,render:d,meters:f,scopes:p,FFTs:x}}function d(){var u,c,m;if(t.initiated||o(),((u=t==null?void 0:t.ctx)==null?void 0:u.state)==="suspended"&&((c=t==null?void 0:t.ctx)==null||c.resume()),t.started)return;console.log("renders");let i=[0,n.mul(0,n.meter({name:"main:sample-rate"},n.sr()))];for(let g in t.layers){let a=t.layers[g];if(a)for(let s in a.signal){let v=n.mul(n.sm(n.const({key:`${a}:volume`,value:a.mute?0:(a==null?void 0:a.volume)||1})),a.signal[s]);i[s]=n.tanh(n.add(i[s],v))}}(m=t==null?void 0:t.core)==null||m.render(i[1],n.fft({name:"main:fft",size:2048},i[0])),t.started=t.started||Date.now()}async function o(){t.initiating||t.initiated||(t.initiating=!0,t.ctx=r(new(AudioContext||webkitAudioContext)),t.core=r(new w),t.node=r(await t.core.initialize(t.ctx,{numberOfInputs:1,numberOfOutputs:1,outputChannelCount:[2]})),t.node.connect(t.ctx.destination),t.core.on("meter",e=>{f[e.source]={max:e.max,min:e.min}}),t.core.on("scope",e=>{p[e.source]=[...e==null?void 0:e.data[0].values()]}),t.core.on("fft",e=>{x[e.source]=[[...e==null?void 0:e.data.real.values()],[...e==null?void 0:e.data.imag.values()]]}),t.initiated=!0)}export{k as u};
