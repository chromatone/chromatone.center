import{ay as x,ax as n}from"./theme.DKUtGHOP.js";import{W as g,D as l,g as y,o as v,I as w,T as r}from"./framework.Bbwy4zmA.js";const e=g({initiating:!1,initiated:!1,started:!1,running:!1,ctx:null,core:null,node:null,layers:{}}),c=l({}),d=l({}),m=l({});function C(){return y()&&v(()=>{o()}),w(()=>e.layers,()=>{e.initiated&&u()}),{audio:e,initAudio:o,render:u,meters:c,scopes:d,FFTs:m}}function u(){if(e.initiated||o(),e?.ctx?.state==="suspended"&&e?.ctx?.resume(),e.started)return;console.log("renders");let i=[0,n.mul(0,n.meter({name:"main:sample-rate"},n.sr()))];for(let f in e.layers){let a=e.layers[f];if(a)for(let s in a.signal){let p=n.mul(n.sm(n.const({key:`${a}:volume`,value:a.mute?0:a?.volume||1})),a.signal[s]);i[s]=n.tanh(n.add(i[s],p))}}e?.core?.render(i[1],n.fft({name:"main:fft",size:2048},i[0])),e.started=e.started||Date.now()}async function o(){e.initiating||e.initiated||(e.initiating=!0,e.ctx=r(new(AudioContext||webkitAudioContext)),e.core=r(new x),e.node=r(await e.core.initialize(e.ctx,{numberOfInputs:1,numberOfOutputs:1,outputChannelCount:[2]})),e.node.connect(e.ctx.destination),e.core.on("meter",t=>{c[t.source]={max:t.max,min:t.min}}),e.core.on("scope",t=>{d[t.source]=[...t?.data[0].values()]}),e.core.on("fft",t=>{m[t.source]=[[...t?.data.real.values()],[...t?.data.imag.values()]]}),e.initiated=!0)}export{C as u};
