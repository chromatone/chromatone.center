import{a1 as x,ap as I,c as $,ar as T,as as M,at as S,au as C}from"./chunks/theme.d7JcQ2cC.js";import{q as k,b as g,c as R,d as j,x as n,y as l,A as r,H as B,F as y,B as b,E as D,K as N,L as P,X as w,N as E,ac as z,a1 as A}from"./chunks/framework.Bi_5INRF.js";const m=c=>(N("data-v-10a1a3b3"),c=c(),P(),c),L={class:"flex flex-col items-center"},V=m(()=>r("div",{class:"text-2xl"},"MIDI Recorder",-1)),F={class:"flex flex-wrap"},O={key:0,class:"i-la-play"},W={key:1,class:"i-la-stop"},X=m(()=>r("div",{class:"i-la-trash-alt"},null,-1)),q=[X],H=m(()=>r("div",{class:"i-la-download"},null,-1)),J=[H],K=["viewBox"],U=["x","y","width","height","fill"],Y={__name:"MidiRecorder",setup(c){new x.Midi;const t=g({title:"",author:"",header:"",duration:R(()=>t.latest-t.started),tracks:{},first:0,last:1e3,top:61,bottom:60}),i=g({width:1e3,height:500,playing:!1,recording:!1,hiddenTracks:[]});j(()=>I.note,e=>{var s,a,o;if(i.recording)if(t.tracks[e.channel]||(t.tracks[e.channel]={active:{},notes:[]}),t.first==0&&(t.first=e.timestamp),e.number>=t.top&&(t.top=e.number),e.number<=t.bottom&&(t.bottom=e.number),e.type=="noteon")t.tracks[e.channel].active[e.number]=e;else{t.last=e.timestamp;let p=(o=(a=(s=t.tracks)==null?void 0:s[e.channel].active)==null?void 0:a[e.number])==null?void 0:o.timestamp;e.duration=e.timestamp-p,delete t.tracks[e.channel].active[e.number],t.tracks[e.channel].notes.push(e)}});function f(e){let s=e-t.first,a=t.last-t.first||1;return s/a*i.width}function _(e){let s=t.top-e,a=e-t.bottom-1;return s/(a+s)*i.height}const d=[];function u(){var s;i.playing=!i.playing;const{master:e}=T();if(i.playing){const a=M()+.5;(s=Object.values(t==null?void 0:t.tracks))==null||s.forEach(o=>{var v;const p=new S(C,{envelope:{attack:.02,decay:.1,sustain:.3,release:1}}).connect(e.limiter);d.push(p),(v=o==null?void 0:o.notes)==null||v.forEach(h=>{p.triggerAttackRelease(h.name,h.duration||.5,h.time+a,h.velocity)})})}else for(;d.length;)d.shift().dispose()}return(e,s)=>(n(),l("div",L,[V,r("div",F,[r("button",{onClick:s[0]||(s[0]=a=>u())},[i.playing?(n(),l("div",W)):(n(),l("div",O))]),r("button",{onClick:s[1]||(s[1]=a=>i.recording=!i.recording)},[r("div",{class:"i-la-circle",style:B({color:i.recording?"red":""})},null,4)]),r("button",{onClick:s[2]||(s[2]=a=>e.clear())},q),r("button",{onClick:s[3]||(s[3]=(...a)=>e.download&&e.download(...a))},J)]),(n(),l("svg",{class:"h-30em w-full",version:"1.1",baseProfile:"full",viewBox:`0 0 ${i.width} ${i.height}`,xmlns:"http://www.w3.org/2000/svg"},[(n(!0),l(y,null,b(t.tracks,a=>(n(),l("g",{key:a},[(n(!0),l(y,null,b(a.notes,o=>(n(),l("rect",{key:o,rx:"0.4",x:f(o.timestamp),y:_(o.number),width:o.duration*1e3/(t.last-t.first),height:i.height/(t.top-t.bottom),fill:D($)((o.number+3)%12)},null,8,U))),128))]))),128))],8,K))]))}},Z=k(Y,[["__scopeId","data-v-10a1a3b3"]]),ie=JSON.parse('{"title":"MIDI Recorder","description":"Record MIDI as you play – visualize and save your music","frontmatter":{"title":"MIDI Recorder","description":"Record MIDI as you play – visualize and save your music","date":"2021-08-04T00:00:00.000Z","layout":"app","sources":["https://github.com/1j01/midi-recorder/","https://github.com/Tonejs/Midi","https://github.com/Tonejs/Tone.js/wiki/TransportTime","https://webmidijs.org/docs/v3.0.0-alpha.10/index.html"],"status":"alpha","version":0.1,"cover":"cover.png"},"headers":[],"relativePath":"practice/midi/recorder/index.md","filePath":"practice/midi/recorder/index.md","lastUpdated":1723957892000}'),G={name:"practice/midi/recorder/index.md"},Q=r("h2",{id:"work-in-progress",tabindex:"-1"},[z("Work in progress "),r("a",{class:"header-anchor",href:"#work-in-progress","aria-label":'Permalink to "Work in progress"'},"​")],-1),ee=r("p",null,"This app is a draft to be iterated on. The idea is to make a tool to record some kind of visual midi sketches and store them as mid files and also directly in the browser.",-1);function te(c,t,i,f,_,d){const u=Z,e=A("client-only");return n(),l("div",null,[w(e,null,{default:E(()=>[w(u)]),_:1}),Q,ee])}const oe=k(G,[["render",te]]);export{ie as __pageData,oe as default};
