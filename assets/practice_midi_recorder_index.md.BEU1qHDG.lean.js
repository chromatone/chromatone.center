import{_ as k}from"./chunks/SaveSvg.BMrQsyrm.js";import{W as x,ah as $,c as I,ai as T,aj as M,ak as j,al as C}from"./chunks/theme.Dd_Fb62b.js";import{q as w,b as g,c as R,d as B,x as l,y as d,A as a,H as D,P as u,F as y,B as _,E as P,U as S,au as E,$ as N}from"./chunks/framework.CQBrk0Ry.js";const z={class:"flex flex-col items-center"},A={class:"flex flex-wrap"},V={key:0,class:"i-la-play"},W={key:1,class:"i-la-stop"},F=["viewBox"],L=["x","y","width","height","fill"],O={__name:"MidiRecorder",setup(b){new x.Midi;const e=g({title:"",author:"",header:"",duration:R(()=>e.latest-e.started),tracks:{},first:0,last:1e3,top:61,bottom:60}),r=g({width:1e3,height:500,playing:!1,recording:!1,hiddenTracks:[]});B(()=>$.note,t=>{var s,o,i;if(r.recording)if(e.tracks[t.channel]||(e.tracks[t.channel]={active:{},notes:[]}),e.first==0&&(e.first=t.timestamp),t.number>=e.top&&(e.top=t.number),t.number<=e.bottom&&(e.bottom=t.number),t.type=="noteon")e.tracks[t.channel].active[t.number]=t;else{e.last=t.timestamp;let n=(i=(o=(s=e.tracks)==null?void 0:s[t.channel].active)==null?void 0:o[t.number])==null?void 0:i.timestamp;t.duration=t.timestamp-n,delete e.tracks[t.channel].active[t.number],e.tracks[t.channel].notes.push(t)}});function h(t){let s=t-e.first,o=e.last-e.first||1;return s/o*r.width}function f(t){let s=e.top-t,o=t-e.bottom-1;return s/(o+s)*r.height}const c=[];function p(){var s;r.playing=!r.playing;const{master:t}=T();if(r.playing){const o=M()+.5;(s=Object.values(e==null?void 0:e.tracks))==null||s.forEach(i=>{var v;const n=new j(C,{envelope:{attack:.02,decay:.1,sustain:.3,release:1}}).connect(t.limiter);c.push(n),(v=i==null?void 0:i.notes)==null||v.forEach(m=>{n.triggerAttackRelease(m.name,m.duration||.5,m.time+o,m.velocity)})})}else for(;c.length;)c.shift().dispose()}return(t,s)=>{const o=k;return l(),d("div",z,[s[6]||(s[6]=a("div",{class:"text-2xl"},"MIDI Recorder",-1)),a("div",A,[a("button",{onClick:s[0]||(s[0]=i=>p())},[r.playing?(l(),d("div",W)):(l(),d("div",V))]),a("button",{onClick:s[1]||(s[1]=i=>r.recording=!r.recording)},[a("div",{class:"i-la-circle",style:D({color:r.recording?"red":""})},null,4)]),a("button",{onClick:s[2]||(s[2]=i=>t.clear())},s[4]||(s[4]=[a("div",{class:"i-la-trash-alt"},null,-1)])),a("button",{onClick:s[3]||(s[3]=(...i)=>t.download&&t.download(...i))},s[5]||(s[5]=[a("div",{class:"i-la-download"},null,-1)])),u(o,{svg:"rec"})]),(l(),d("svg",{class:"h-30em w-full",id:"rec",version:"1.1",baseProfile:"full",viewBox:`0 0 ${r.width} ${r.height}`,xmlns:"http://www.w3.org/2000/svg"},[(l(!0),d(y,null,_(e.tracks,i=>(l(),d("g",{key:i},[(l(!0),d(y,null,_(i.notes,n=>(l(),d("rect",{key:n,rx:"0.4",x:h(n.timestamp),y:f(n.number),width:n.duration*1e3/(e.last-e.first),height:r.height/(e.top-e.bottom),fill:P(I)((n.number+3)%12)},null,8,L))),128))]))),128))],8,F))])}}},U=w(O,[["__scopeId","data-v-80707252"]]),Z=JSON.parse('{"title":"MIDI Recorder","description":"Record MIDI as you play – visualize and save your music","frontmatter":{"title":"MIDI Recorder","description":"Record MIDI as you play – visualize and save your music","date":"2021-08-04T00:00:00.000Z","layout":"app","sources":["https://github.com/1j01/midi-recorder/","https://github.com/Tonejs/Midi","https://github.com/Tonejs/Tone.js/wiki/TransportTime","https://webmidijs.org/docs/v3.0.0-alpha.10/index.html"],"status":"alpha","version":0.1,"cover":"cover.png"},"headers":[],"relativePath":"practice/midi/recorder/index.md","filePath":"practice/midi/recorder/index.md","lastUpdated":1733159095000}'),q={name:"practice/midi/recorder/index.md"};function H(b,e,r,h,f,c){const p=U,t=N("client-only");return l(),d("div",null,[u(t,null,{default:S(()=>[u(p)]),_:1}),e[0]||(e[0]=a("h2",{id:"work-in-progress",tabindex:"-1"},[E("Work in progress "),a("a",{class:"header-anchor",href:"#work-in-progress","aria-label":'Permalink to "Work in progress"'},"​")],-1)),e[1]||(e[1]=a("p",null,"This app is a draft to be iterated on. The idea is to make a tool to record some kind of visual midi sketches and store them as mid files and also directly in the browser.",-1))])}const G=w(q,[["render",H]]);export{Z as __pageData,G as default};
