import{as as k,f as b,n as x,aw as I,ax as $,ay as T,az as M}from"./chunks/theme.4UhWGhT9.js";import{D as w,b as _,c as C,d as S,E as n,F as l,G as r,L as D,V as v,W as y,C as R,J as j,K as B,O as g,X as P,$ as z,a4 as E}from"./chunks/framework.Rugf828X.js";const u=d=>(j("data-v-f83e2a2a"),d=d(),B(),d),N={class:"flex flex-col items-center"},V=u(()=>r("div",{class:"text-2xl"},"MIDI Recorder",-1)),L={class:"flex flex-wrap"},W={key:0,class:"i-la-play"},A={key:1,class:"i-la-stop"},F=u(()=>r("div",{class:"i-la-trash-alt"},null,-1)),J=[F],O=u(()=>r("div",{class:"i-la-download"},null,-1)),X=[O],G=["viewBox"],K=["x","y","width","height","fill"],U={__name:"MidiRecorder",setup(d){new k.Midi;const t=_({title:"",author:"",header:"",duration:C(()=>t.latest-t.started),tracks:{},first:0,last:1e3,top:61,bottom:60}),a=_({width:1e3,height:500,playing:!1,recording:!1,hiddenTracks:[]});S(()=>b.note,e=>{var s,i,o;if(a.recording)if(t.tracks[e.channel]||(t.tracks[e.channel]={active:{},notes:[]}),t.first==0&&(t.first=e.timestamp),e.number>=t.top&&(t.top=e.number),e.number<=t.bottom&&(t.bottom=e.number),e.type=="noteon")t.tracks[e.channel].active[e.number]=e;else{t.last=e.timestamp;let c=(o=(i=(s=t.tracks)==null?void 0:s[e.channel].active)==null?void 0:i[e.number])==null?void 0:o.timestamp;e.duration=e.timestamp-c,delete t.tracks[e.channel].active[e.number],t.tracks[e.channel].notes.push(e)}});function m(e){let s=e-t.first,i=t.last-t.first||1;return s/i*a.width}function f(e){let s=t.top-e,i=e-t.bottom-1;return s/(i+s)*a.height}const h=[];function p(){a.playing=!a.playing;const{master:e}=I();if(a.playing){const s=$()+.5;t.filteredTracks.forEach(i=>{const o=new T(M,{envelope:{attack:.02,decay:.1,sustain:.3,release:1}}).connect(e.limiter);h.push(o),i.notes.forEach(c=>{o.triggerAttackRelease(c.name,c.duration,c.time+s,c.velocity)})})}else for(;h.length;)h.shift().dispose()}return(e,s)=>(n(),l("div",N,[V,r("div",L,[r("button",{onClick:s[0]||(s[0]=i=>p())},[a.playing?(n(),l("div",A)):(n(),l("div",W))]),r("button",{onClick:s[1]||(s[1]=i=>a.recording=!a.recording)},[r("div",{class:"i-la-circle",style:D({color:a.recording?"red":""})},null,4)]),r("button",{onClick:s[2]||(s[2]=i=>e.clear())},J),r("button",{onClick:s[3]||(s[3]=(...i)=>e.download&&e.download(...i))},X)]),(n(),l("svg",{class:"h-30em w-full",version:"1.1",baseProfile:"full",viewBox:`0 0 ${a.width} ${a.height}`,xmlns:"http://www.w3.org/2000/svg"},[(n(!0),l(v,null,y(t.tracks,i=>(n(),l("g",{key:i},[(n(!0),l(v,null,y(i.notes,o=>(n(),l("rect",{key:o,rx:"0.4",x:m(o.timestamp),y:f(o.number),width:o.duration*1e3/(t.last-t.first),height:a.height/(t.top-t.bottom),fill:R(x)((o.number+3)%12)},null,8,K))),128))]))),128))],8,G))]))}},Y=w(U,[["__scopeId","data-v-f83e2a2a"]]),se=JSON.parse('{"title":"MIDI Recorder","description":"Record MIDI as you play – visualize and save your music","frontmatter":{"title":"MIDI Recorder","description":"Record MIDI as you play – visualize and save your music","date":"2021-08-04T00:00:00.000Z","layout":"app","sources":["https://github.com/1j01/midi-recorder/","https://github.com/Tonejs/Midi","https://github.com/Tonejs/Tone.js/wiki/TransportTime","https://webmidijs.org/docs/v3.0.0-alpha.10/index.html"],"status":"alpha","version":0.1},"headers":[],"relativePath":"practice/midi/recorder/index.md","filePath":"practice/midi/recorder/index.md","lastUpdated":1706343679000}'),Z={name:"practice/midi/recorder/index.md"},q=r("h2",{id:"work-in-progress",tabindex:"-1"},[z("Work in progress "),r("a",{class:"header-anchor",href:"#work-in-progress","aria-label":'Permalink to "Work in progress"'},"​")],-1),H=r("p",null,"This app is a draft to be iterated on. The idea is to make a tool to record some kind of visual midi sketches and store them as mid files and also directly in the browser.",-1);function Q(d,t,a,m,f,h){const p=Y,e=E("client-only");return n(),l("div",null,[g(e,null,{default:P(()=>[g(p)]),_:1}),q,H])}const ie=w(Z,[["render",Q]]);export{se as __pageData,ie as default};
