import{ap as x,f as I,n as $,au as T,av as M,aw as C,ax as S}from"./chunks/theme.BTHx806C.js";import{D as k,b as g,c as D,d as R,E as n,F as l,G as r,L as j,V as y,W as w,C as B,J as P,K as E,O as b,X as N,$ as V,a4 as z}from"./chunks/framework.BilnkUFq.js";const m=c=>(P("data-v-10a1a3b3"),c=c(),E(),c),L={class:"flex flex-col items-center"},O=m(()=>r("div",{class:"text-2xl"},"MIDI Recorder",-1)),W={class:"flex flex-wrap"},A={key:0,class:"i-la-play"},F={key:1,class:"i-la-stop"},J=m(()=>r("div",{class:"i-la-trash-alt"},null,-1)),X=[J],G=m(()=>r("div",{class:"i-la-download"},null,-1)),K=[G],U=["viewBox"],Y=["x","y","width","height","fill"],Z={__name:"MidiRecorder",setup(c){new x.Midi;const t=g({title:"",author:"",header:"",duration:D(()=>t.latest-t.started),tracks:{},first:0,last:1e3,top:61,bottom:60}),a=g({width:1e3,height:500,playing:!1,recording:!1,hiddenTracks:[]});R(()=>I.note,e=>{var s,i,o;if(a.recording)if(t.tracks[e.channel]||(t.tracks[e.channel]={active:{},notes:[]}),t.first==0&&(t.first=e.timestamp),e.number>=t.top&&(t.top=e.number),e.number<=t.bottom&&(t.bottom=e.number),e.type=="noteon")t.tracks[e.channel].active[e.number]=e;else{t.last=e.timestamp;let h=(o=(i=(s=t.tracks)==null?void 0:s[e.channel].active)==null?void 0:i[e.number])==null?void 0:o.timestamp;e.duration=e.timestamp-h,delete t.tracks[e.channel].active[e.number],t.tracks[e.channel].notes.push(e)}});function f(e){let s=e-t.first,i=t.last-t.first||1;return s/i*a.width}function _(e){let s=t.top-e,i=e-t.bottom-1;return s/(i+s)*a.height}const d=[];function u(){var s;a.playing=!a.playing;const{master:e}=T();if(a.playing){const i=M()+.5;(s=Object.values(t==null?void 0:t.tracks))==null||s.forEach(o=>{var v;const h=new C(S,{envelope:{attack:.02,decay:.1,sustain:.3,release:1}}).connect(e.limiter);d.push(h),(v=o==null?void 0:o.notes)==null||v.forEach(p=>{h.triggerAttackRelease(p.name,p.duration||.5,p.time+i,p.velocity)})})}else for(;d.length;)d.shift().dispose()}return(e,s)=>(n(),l("div",L,[O,r("div",W,[r("button",{onClick:s[0]||(s[0]=i=>u())},[a.playing?(n(),l("div",F)):(n(),l("div",A))]),r("button",{onClick:s[1]||(s[1]=i=>a.recording=!a.recording)},[r("div",{class:"i-la-circle",style:j({color:a.recording?"red":""})},null,4)]),r("button",{onClick:s[2]||(s[2]=i=>e.clear())},X),r("button",{onClick:s[3]||(s[3]=(...i)=>e.download&&e.download(...i))},K)]),(n(),l("svg",{class:"h-30em w-full",version:"1.1",baseProfile:"full",viewBox:`0 0 ${a.width} ${a.height}`,xmlns:"http://www.w3.org/2000/svg"},[(n(!0),l(y,null,w(t.tracks,i=>(n(),l("g",{key:i},[(n(!0),l(y,null,w(i.notes,o=>(n(),l("rect",{key:o,rx:"0.4",x:f(o.timestamp),y:_(o.number),width:o.duration*1e3/(t.last-t.first),height:a.height/(t.top-t.bottom),fill:B($)((o.number+3)%12)},null,8,Y))),128))]))),128))],8,U))]))}},q=k(Z,[["__scopeId","data-v-10a1a3b3"]]),ae=JSON.parse('{"title":"MIDI Recorder","description":"Record MIDI as you play – visualize and save your music","frontmatter":{"title":"MIDI Recorder","description":"Record MIDI as you play – visualize and save your music","date":"2021-08-04T00:00:00.000Z","layout":"app","sources":["https://github.com/1j01/midi-recorder/","https://github.com/Tonejs/Midi","https://github.com/Tonejs/Tone.js/wiki/TransportTime","https://webmidijs.org/docs/v3.0.0-alpha.10/index.html"],"status":"alpha","version":0.1},"headers":[],"relativePath":"practice/midi/recorder/index.md","filePath":"practice/midi/recorder/index.md","lastUpdated":1714122080000}'),H={name:"practice/midi/recorder/index.md"},Q=r("h2",{id:"work-in-progress",tabindex:"-1"},[V("Work in progress "),r("a",{class:"header-anchor",href:"#work-in-progress","aria-label":'Permalink to "Work in progress"'},"​")],-1),ee=r("p",null,"This app is a draft to be iterated on. The idea is to make a tool to record some kind of visual midi sketches and store them as mid files and also directly in the browser.",-1);function te(c,t,a,f,_,d){const u=q,e=z("client-only");return n(),l("div",null,[b(e,null,{default:N(()=>[b(u)]),_:1}),Q,ee])}const oe=k(H,[["render",te]]);export{ae as __pageData,oe as default};
