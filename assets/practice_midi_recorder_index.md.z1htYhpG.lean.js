import{_ as k}from"./chunks/SaveSvg.C6wkmnu4.js";import{Z as w,c as b,am as x,an as I,ao as $,ap as M,al as T}from"./chunks/theme.DLCqlVTm.js";import{_ as y,D as f,M as j,I as C,q as n,f as l,s as a,l as m,v as D,F as v,Y as g,u as R,i as B,j as P,aw as S}from"./chunks/framework.CxSiiyCs.js";const E={class:"flex flex-col items-center"},N={class:"flex flex-wrap"},z={key:0,class:"i-la-play"},V={key:1,class:"i-la-stop"},A=["viewBox"],F=["x","y","width","height","fill"],L={__name:"MidiRecorder",setup(_){new w.Midi;const e=f({title:"",author:"",header:"",duration:j(()=>e.latest-e.started),tracks:{},first:0,last:1e3,top:61,bottom:60}),i=f({width:1e3,height:500,playing:!1,recording:!1,hiddenTracks:[]});C(()=>T.note,t=>{if(i.recording)if(e.tracks[t.channel]||(e.tracks[t.channel]={active:{},notes:[]}),e.first==0&&(e.first=t.timestamp),t.number>=e.top&&(e.top=t.number),t.number<=e.bottom&&(e.bottom=t.number),t.type=="noteon")e.tracks[t.channel].active[t.number]=t;else{e.last=t.timestamp;let s=e.tracks?.[t.channel].active?.[t.number]?.timestamp;t.duration=t.timestamp-s,delete e.tracks[t.channel].active[t.number],e.tracks[t.channel].notes.push(t)}});function u(t){let s=t-e.first,d=e.last-e.first||1;return s/d*i.width}function h(t){let s=e.top-t,d=t-e.bottom-1;return s/(d+s)*i.height}const c=[];function p(){i.playing=!i.playing;const{master:t}=x();if(i.playing){const s=I()+.5;Object.values(e?.tracks)?.forEach(d=>{const r=new $(M,{envelope:{attack:.02,decay:.1,sustain:.3,release:1}}).connect(t.limiter);c.push(r),d?.notes?.forEach(o=>{r.triggerAttackRelease(o.name,o.duration||.5,o.time+s,o.velocity)})})}else for(;c.length;)c.shift().dispose()}return(t,s)=>{const d=k;return l(),n("div",E,[s[6]||(s[6]=a("div",{class:"text-2xl"},"MIDI Recorder",-1)),a("div",N,[a("button",{onClick:s[0]||(s[0]=r=>p())},[i.playing?(l(),n("div",V)):(l(),n("div",z))]),a("button",{onClick:s[1]||(s[1]=r=>i.recording=!i.recording)},[a("div",{class:"i-la-circle",style:D({color:i.recording?"red":""})},null,4)]),a("button",{onClick:s[2]||(s[2]=r=>t.clear())},s[4]||(s[4]=[a("div",{class:"i-la-trash-alt"},null,-1)])),a("button",{onClick:s[3]||(s[3]=(...r)=>t.download&&t.download(...r))},s[5]||(s[5]=[a("div",{class:"i-la-download"},null,-1)])),m(d,{svg:"rec"})]),(l(),n("svg",{class:"h-30em w-full",id:"rec",version:"1.1",baseProfile:"full",viewBox:`0 0 ${i.width} ${i.height}`,xmlns:"http://www.w3.org/2000/svg"},[(l(!0),n(v,null,g(e.tracks,r=>(l(),n("g",{key:r},[(l(!0),n(v,null,g(r.notes,o=>(l(),n("rect",{key:o,rx:"0.4",x:u(o.timestamp),y:h(o.number),width:o.duration*1e3/(e.last-e.first),height:i.height/(e.top-e.bottom),fill:R(b)((o.number+3)%12)},null,8,F))),128))]))),128))],8,A))])}}},O=y(L,[["__scopeId","data-v-80707252"]]),U=JSON.parse('{"title":"MIDI Recorder","description":"Record MIDI as you play – visualize and save your music","frontmatter":{"title":"MIDI Recorder","description":"Record MIDI as you play – visualize and save your music","date":"2021-08-04T00:00:00.000Z","layout":"app","sources":["https://github.com/1j01/midi-recorder/","https://github.com/Tonejs/Midi","https://github.com/Tonejs/Tone.js/wiki/TransportTime","https://webmidijs.org/docs/v3.0.0-alpha.10/index.html"],"status":"alpha","version":0.1,"cover":"cover.png"},"headers":[],"relativePath":"practice/midi/recorder/index.md","filePath":"practice/midi/recorder/index.md","lastUpdated":1761369785000}'),W={name:"practice/midi/recorder/index.md"};function Y(_,e,i,u,h,c){const p=O,t=B("client-only");return l(),n("div",null,[m(t,null,{default:P(()=>[m(p)]),_:1}),e[0]||(e[0]=a("h2",{id:"work-in-progress",tabindex:"-1"},[S("Work in progress "),a("a",{class:"header-anchor",href:"#work-in-progress","aria-label":"Permalink to “Work in progress”"},"​")],-1)),e[1]||(e[1]=a("p",null,"This app is a draft to be iterated on. The idea is to make a tool to record some kind of visual midi sketches and store them as mid files and also directly in the browser.",-1))])}const X=y(W,[["render",Y]]);export{U as __pageData,X as default};
