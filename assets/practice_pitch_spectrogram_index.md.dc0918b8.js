import{P as Ze,i as et,r as tt,e as it,j as st,v as he,b as ge,F as te,Z as at,C as nt,B as rt,X as ht,T as De,O as ot,R as lt,M as ct}from"./chunks/framework.7e747cd7.js";import{_ as dt}from"./chunks/start.3be170db.js";import{i as _t,m as ut}from"./chunks/audio.170dbcbf.js";import{f as ft}from"./chunks/calculations.3384a913.js";import{u as gt}from"./chunks/mic.967a994c.js";import{j as Ie}from"./chunks/index.c0ca431c.js";import{u as pt}from"./chunks/index.0b97d2b2.js";import"./chunks/index.83aed4fc.js";import"./chunks/UserMedia.4741de0f.js";import"./chunks/Subtract.f0fef764.js";import"./chunks/OnePoleFilter.2d0525f8.js";/**!
 * audioMotion-analyzer
 * High-resolution real-time graphic audio spectrum analyzer JS module
 *
 * @version 4.0.0
 * @author  Henrique Avila Vianna <hvianna@gmail.com> <https://henriquevianna.com>
 * @license AGPL-3.0-or-later
 */const mt="4.0.0",oe=2*Math.PI,me=Math.PI/2,wt=oe/3600,Ne=8.17579892,Fe="dual-combined",Y="single",F="dual-vertical",bt="#111",ke="",qe="A",Ge="B",ze="C",He="D",We="468",ue="sans-serif",yt="#0f0",xt="#7f7f7f22",Lt="create",Pe="fschange",Rt="lores",At="resize",we="user",St="#000c",Xe="#fff",vt="#4f4",Ue="#888",Ct="#555",be="bark",fe="linear",re="log",ye="mel",$e=["#a35","#c66","#e94","#ed0","#9d5","#4d8","#2cb","#0bc","#09c","#36b"],Ye=[["classic",{colorStops:["hsl( 0, 100%, 50% )",{pos:.6,color:"hsl( 60, 100%, 50% )"},"hsl( 120, 100%, 50% )"]}],["prism",{colorStops:$e}],["rainbow",{dir:"h",colorStops:["#817",...$e,"#639"]}],["orangered",{bgColor:"#3e2f29",colorStops:["OrangeRed"]}],["steelblue",{bgColor:"#222c35",colorStops:["SteelBlue"]}]],Et=["ERR_AUDIO_CONTEXT_FAIL","Could not create audio context. Web Audio API not supported?"],Bt=["ERR_INVALID_AUDIO_CONTEXT","Provided audio context is not valid"],Tt=["ERR_UNKNOWN_GRADIENT","Unknown gradient"],xe=["ERR_FREQUENCY_TOO_LOW","Frequency values must be >= 1"],Ot=["ERR_INVALID_MODE","Invalid mode"],Mt=["ERR_REFLEX_OUT_OF_RANGE","Reflex ratio must be >= 0 and < 1"],Dt=["ERR_INVALID_AUDIO_SOURCE","Audio source must be an instance of HTMLMediaElement or AudioNode"],It=["ERR_GRADIENT_INVALID_NAME","Gradient name must be a non-empty string"],Nt=["ERR_GRADIENT_NOT_AN_OBJECT","Gradient options must be an object"],Ft=["ERR_GRADIENT_MISSING_COLOR","Gradient colorStops must be a non-empty array"];class k extends Error{constructor(e,i){const[s,t]=e;super(t+(i!==void 0?`: ${i}`:"")),this.name="AudioMotionError",this.code=s}}const Ve=(ie,e)=>console.warn(`${ie} is deprecated. Use ${e} instead.`);class kt{constructor(e,i={}){this._ready=!1,this._gradients={},this._selectedGrads=[],this._canvasGradients=[];for(const[c,u]of Ye)this.registerGradient(c,u);this._container=e||document.body,this._defaultWidth=this._container.clientWidth||640,this._defaultHeight=this._container.clientHeight||270;let s;if(!(i.source&&(s=i.source.context))){if(!(s=i.audioCtx))try{s=new(window.AudioContext||window.webkitAudioContext)}catch{throw new k(Et)}}if(!s.createGain)throw new k(Bt);const t=this._analyzer=[s.createAnalyser(),s.createAnalyser()],n=this._splitter=s.createChannelSplitter(2),_=this._merger=s.createChannelMerger(2);this._input=s.createGain(),this._output=s.createGain(),this._sources=[],i.source&&this.connectInput(i.source);for(const c of[0,1])n.connect(t[c],c);_.connect(this._output),this._outNodes=[],i.connectSpeakers!==!1&&this.connectOutput(),this._energy={val:0,peak:0,hold:0};const r=document.createElement("canvas");r.style="max-width: 100%;",this._canvasCtx=r.getContext("2d");for(const c of["_scaleX","_scaleR"])this[c]=document.createElement("canvas").getContext("2d");this._fsEl=i.fsElement||r;const l=()=>{this._fsTimeout||(this._fsTimeout=window.setTimeout(()=>{this._fsChanging||(this._setCanvas(At),this._fsTimeout=0)},60))};window.ResizeObserver&&new ResizeObserver(l).observe(this._container),window.addEventListener("resize",l),r.addEventListener("fullscreenchange",()=>{this._fsChanging=!0,this._fsTimeout&&window.clearTimeout(this._fsTimeout),this._setCanvas(Pe),this._fsTimeout=window.setTimeout(()=>{this._fsChanging=!1,this._fsTimeout=0},60)});const a=()=>{s.state=="suspended"&&s.resume(),window.removeEventListener("click",a)};window.addEventListener("click",a),this._calcAux(),this._setProps(i,!0),this.useCanvas&&this._container.appendChild(r),this._ready=!0,this._setCanvas(Lt)}get alphaBars(){return this._alphaBars}set alphaBars(e){this._alphaBars=!!e,this._calcAux()}get ansiBands(){return this._ansiBands}set ansiBands(e){this._ansiBands=!!e,this._calcBars()}get barSpace(){return this._barSpace}set barSpace(e){this._barSpace=+e||0,this._calcAux()}get channelLayout(){return this._chLayout}set channelLayout(e){const i=[Y,F,Fe];this._chLayout=i[Math.max(0,i.indexOf((""+e).toLowerCase()))],this._input.disconnect(),this._input.connect(this._chLayout!=Y?this._splitter:this._analyzer[0]),this._analyzer[0].disconnect(),this._outNodes.length&&this._analyzer[0].connect(this._chLayout!=Y?this._merger:this._output),this._calcAux(),this._createScales(),this._calcLeds(),this._makeGrad()}get fftSize(){return this._analyzer[0].fftSize}set fftSize(e){for(const s of[0,1])this._analyzer[s].fftSize=e;const i=this._analyzer[0].frequencyBinCount;this._fftData=[new Float32Array(i),new Float32Array(i)],this._calcBars()}get frequencyScale(){return this._frequencyScale}set frequencyScale(e){const i=[re,be,ye,fe];this._frequencyScale=i[Math.max(0,i.indexOf((""+e).toLowerCase()))],this._calcAux(),this._calcBars()}get gradient(){return this._selectedGrads[0]}set gradient(e){this._setGradient(e)}get gradientLeft(){return this._selectedGrads[0]}set gradientLeft(e){this._setGradient(e,0)}get gradientRight(){return this._selectedGrads[1]}set gradientRight(e){this._setGradient(e,1)}get height(){return this._height}set height(e){this._height=e,this._setCanvas(we)}get ledBars(){return this._showLeds}set ledBars(e){this._showLeds=!!e,this._calcAux()}get linearAmplitude(){return this._linearAmplitude}set linearAmplitude(e){this._linearAmplitude=!!e}get linearBoost(){return this._linearBoost}set linearBoost(e){this._linearBoost=e>=1?+e:1}get loRes(){return this._loRes}set loRes(e){this._loRes=!!e,this._setCanvas(Rt)}get lumiBars(){return this._lumiBars}set lumiBars(e){this._lumiBars=!!e,this._calcAux(),this._calcLeds(),this._makeGrad()}get maxDecibels(){return this._analyzer[0].maxDecibels}set maxDecibels(e){for(const i of[0,1])this._analyzer[i].maxDecibels=e}get maxFreq(){return this._maxFreq}set maxFreq(e){if(e<1)throw new k(xe);this._maxFreq=Math.min(e,this.audioCtx.sampleRate/2),this._calcBars()}get minDecibels(){return this._analyzer[0].minDecibels}set minDecibels(e){for(const i of[0,1])this._analyzer[i].minDecibels=e}get minFreq(){return this._minFreq}set minFreq(e){if(e<1)throw new k(xe);this._minFreq=+e,this._calcBars()}get mirror(){return this._mirror}set mirror(e){this._mirror=Math.sign(e)|0,this._calcAux(),this._calcBars(),this._makeGrad()}get mode(){return this._mode}set mode(e){const i=e|0;if(i>=0&&i<=10&&i!=9)this._mode=i,this._calcAux(),this._calcBars(),this._makeGrad();else throw new k(Ot,e)}get noteLabels(){return this._noteLabels}set noteLabels(e){this._noteLabels=!!e,this._createScales()}get outlineBars(){return this._outlineBars}set outlineBars(e){this._outlineBars=!!e,this._calcAux()}get radial(){return this._radial}set radial(e){this._radial=!!e,this._calcAux(),this._calcBars(),this._makeGrad()}get reflexRatio(){return this._reflexRatio}set reflexRatio(e){if(e=+e||0,e<0||e>=1)throw new k(Mt);this._reflexRatio=e,this._calcAux(),this._makeGrad(),this._calcLeds()}get smoothing(){return this._analyzer[0].smoothingTimeConstant}set smoothing(e){for(const i of[0,1])this._analyzer[i].smoothingTimeConstant=e}get spinSpeed(){return this._spinSpeed}set spinSpeed(e){e=+e||0,(this._spinSpeed===void 0||e==0)&&(this._spinAngle=-me),this._spinSpeed=e}get splitGradient(){return this._splitGradient}set splitGradient(e){this._splitGradient=!!e,this._makeGrad()}get stereo(){return Ve("stereo","channelLayout"),this._chLayout!=Y}set stereo(e){Ve("stereo","channelLayout"),this.channelLayout=e?F:Y}get volume(){return this._output.gain.value}set volume(e){this._output.gain.value=e}get weightingFilter(){return this._weightingFilter}set weightingFilter(e){const i=[ke,qe,Ge,ze,He,We];this._weightingFilter=i[Math.max(0,i.indexOf((""+e).toUpperCase()))]}get width(){return this._width}set width(e){this._width=e,this._setCanvas(we)}get audioCtx(){return this._input.context}get canvas(){return this._canvasCtx.canvas}get canvasCtx(){return this._canvasCtx}get connectedSources(){return this._sources}get connectedTo(){return this._outNodes}get fps(){return this._fps}get fsHeight(){return this._fsHeight}get fsWidth(){return this._fsWidth}get isAlphaBars(){return this._isAlphaBars}get isBandsMode(){return this._isBandsMode}get isFullscreen(){return(document.fullscreenElement||document.webkitFullscreenElement)===this._fsEl}get isLedBars(){return this._isLedDisplay}get isLumiBars(){return this._isLumiBars}get isOctaveBands(){return this._isOctaveBands}get isOn(){return this._runId!==void 0}get isOutlineBars(){return this._isOutline}get pixelRatio(){return this._pixelRatio}static get version(){return mt}connectInput(e){const i=e instanceof HTMLMediaElement;if(!(i||e.connect))throw new k(Dt);const s=i?this.audioCtx.createMediaElementSource(e):e;return this._sources.includes(s)||(s.connect(this._input),this._sources.push(s)),s}connectOutput(e=this.audioCtx.destination){if(!this._outNodes.includes(e)&&(this._output.connect(e),this._outNodes.push(e),this._outNodes.length==1))for(const i of[0,1])this._analyzer[i].connect(this._chLayout==Y&&!i?this._output:this._merger,0,i)}disconnectInput(e){e?Array.isArray(e)||(e=[e]):e=Array.from(this._sources);for(const i of e){const s=this._sources.indexOf(i);s>=0&&(i.disconnect(this._input),this._sources.splice(s,1))}}disconnectOutput(e){if(!(e&&!this._outNodes.includes(e))&&(this._output.disconnect(e),this._outNodes=e?this._outNodes.filter(i=>i!==e):[],this._outNodes.length==0))for(const i of[0,1])this._analyzer[i].disconnect()}getBars(){return Array.from(this._bars,({posX:e,freq:i,freqLo:s,freqHi:t,hold:n,peak:_,value:r})=>({posX:e,freq:i,freqLo:s,freqHi:t,hold:n,peak:_,value:r}))}getEnergy(e,i){if(e===void 0)return this._energy.val;if(e!=+e){if(e=="peak")return this._energy.peak;const r={bass:[20,250],lowMid:[250,500],mid:[500,2e3],highMid:[2e3,4e3],treble:[4e3,16e3]};if(!r[e])return null;[e,i]=r[e]}const s=this._freqToBin(e),t=i?this._freqToBin(i):s,n=this._chLayout==Y?1:2;let _=0;for(let r=0;r<n;r++)for(let l=s;l<=t;l++)_+=this._normalizedB(this._fftData[r][l]);return _/(t-s+1)/n}registerGradient(e,i){if(typeof e!="string"||e.trim().length==0)throw new k(It);if(typeof i!="object")throw new k(Nt);if(!Array.isArray(i.colorStops)||!i.colorStops.length)throw new k(Ft);this._gradients[e]={bgColor:i.bgColor||bt,dir:i.dir,colorStops:i.colorStops},this._selectedGrads.includes(e)&&this._makeGrad()}setCanvasSize(e,i){this._width=e,this._height=i,this._setCanvas(we)}setFreqRange(e,i){if(e<1||i<1)throw new k(xe);this._minFreq=Math.min(e,i),this.maxFreq=Math.max(e,i)}setLedParams(e){let i,s,t;e&&(i=e.maxLeds|0,s=+e.spaceV,t=+e.spaceH),this._ledParams=i>0&&s>0&&t>=0?[i,s,t]:void 0,this._calcLeds()}setOptions(e){this._setProps(e)}setSensitivity(e,i){for(const s of[0,1])this._analyzer[s].minDecibels=Math.min(e,i),this._analyzer[s].maxDecibels=Math.max(e,i)}toggleAnalyzer(e){const i=this.isOn;return e===void 0&&(e=!i),i&&!e?(cancelAnimationFrame(this._runId),this._runId=void 0):!i&&e&&(this._frame=this._fps=0,this._time=performance.now(),this._runId=requestAnimationFrame(s=>this._draw(s))),this.isOn}toggleFullscreen(){if(this.isFullscreen)document.exitFullscreen?document.exitFullscreen():document.webkitExitFullscreen&&document.webkitExitFullscreen();else{const e=this._fsEl;e.requestFullscreen?e.requestFullscreen():e.webkitRequestFullscreen&&e.webkitRequestFullscreen()}}_binToFreq(e){return e*this.audioCtx.sampleRate/this.fftSize||1}_calcAux(){const e=this.canvas,i=this._radial,s=this._chLayout==F&&!i,t=e.width>>1;this._radius=Math.min(e.width,e.height)*(this._chLayout==F?.375:.125)|0,this._barSpacePx=Math.min(this._barWidth-1,this._barSpace>0&&this._barSpace<1?this._barWidth*this._barSpace:this._barSpace),this._isBandsMode=this._mode%10!=0,this._isOctaveBands=this._isBandsMode&&this._frequencyScale==re,this._isLedDisplay=this._showLeds&&this._isBandsMode&&!i,this._isLumiBars=this._lumiBars&&this._isBandsMode&&!i,this._isAlphaBars=this._alphaBars&&!this._isLumiBars&&this._mode!=10,this._isOutline=this._outlineBars&&this._isBandsMode&&!this._isLumiBars&&!this._isLedDisplay,this._maximizeLeds=this._chLayout!=F||this._reflexRatio>0&&!this._isLumiBars,this._channelHeight=e.height-(s&&!this._isLedDisplay?.5:0)>>s,this._analyzerHeight=this._channelHeight*(this._isLumiBars||i?1:1-this._reflexRatio)|0,this._channelGap=s?e.height-this._channelHeight*2:0,this._analyzerWidth=e.width-t*(this._mirror!=0),this._initialX=t*(this._mirror==-1&&!i)}_calcBars(){const e=this._bars=[];if(!this._ready)return;const i=u=>e.push({...u,peak:[0,0],hold:[0],value:[0]}),s=u=>{const C=this._freqToBin(u,"floor"),m=this._binToFreq(C),d=this._binToFreq(C+1),o=Math.log2(u/m)/Math.log2(d/m);return[C,o]},t=this._analyzerWidth,n=this._initialX,_=this._ansiBands,r=this._maxFreq,l=this._minFreq;let a,c;if(this._isOctaveBands){const u=(f,w,b)=>+f.toPrecision(b?Math.max(w,1+Math.log10(f)|0):w),C=f=>{const w=[1,1.12,1.25,1.4,1.6,1.8,2,2.24,2.5,2.8,3.15,3.55,4,4.5,5,5.6,6.3,7.1,8,9,10],b=Math.log10(f)|0,B=f/10**b;let p=1;for(;p<w.length&&B>w[p];)p++;return B-w[p-1]<w[p]-B&&p--,(w[p]*10**(b+5)|0)/1e5},m=[0,24,12,8,6,4,3,2,1][this._mode],d=_?10**(3/(m*10)):2**(1/m),o=d**.5;let x=_?7.94328235/(m%2?1:o):Ne;do{let f=x;const w=u(f/o,4,!0),b=u(f*o,4,!0),[B,p]=s(w),[A,S]=s(b);_?f=m<4?C(f):u(f,f.toString()[0]<5?3:2):f=u(f,4,!0),f>=l&&i({posX:0,freq:f,freqLo:w,freqHi:b,binLo:B,binHi:A,ratioLo:p,ratioHi:S}),x*=d}while(x<=r);this._barWidth=t/e.length,e.forEach((f,w)=>f.posX=n+w*this._barWidth);const L=e[0],R=e[e.length-1];a=this._freqScaling(L.freqLo),c=t/(this._freqScaling(R.freqHi)-a),L.freqLo<l&&(L.freqLo=l,[L.binLo,L.ratioLo]=s(l)),R.freqHi>r&&(R.freqHi=r,[R.binHi,R.ratioHi]=s(r))}else if(this._isBandsMode){const u=[0,24,12,8,6,4,3,2,1][this._mode]*10,C=m=>{switch(this._frequencyScale){case be:return 1960/(26.81/(m+.53)-1);case ye:return 700*(2**m-1);case fe:return m}};this._barWidth=t/u,a=this._freqScaling(l),c=t/(this._freqScaling(r)-a);for(let m=0,d=0;m<u;m++,d+=this._barWidth){const o=C(a+d/c),x=C(a+(d+this._barWidth/2)/c),L=C(a+(d+this._barWidth)/c),[R,f]=s(o),[w,b]=s(L);i({posX:n+d,freq:x,freqLo:o,freqHi:L,binLo:R,binHi:w,ratioLo:f,ratioHi:b})}}else{this._barWidth=1,a=this._freqScaling(l),c=t/(this._freqScaling(r)-a);const u=this._freqToBin(l,"floor"),C=this._freqToBin(r);let m=-999;for(let d=u;d<=C;d++){const o=this._binToFreq(d),x=n+Math.round(c*(this._freqScaling(o)-a));if(x>m)i({posX:x,freq:o,freqLo:o,freqHi:o,binLo:d,binHi:d,ratioLo:0,ratioHi:0}),m=x;else if(e.length){const L=e[e.length-1];L.binHi=d,L.freqHi=o,L.freq=(L.freqLo*o)**.5}}}this._scaleMin=a,this._unitWidth=c,this._calcAux(),this._createScales(),this._calcLeds()}_calcLeds(){if(!this._isBandsMode||!this._ready)return;const e=this._pixelRatio/(window.devicePixelRatio>1&&window.screen.height<=540?2:1),i=[[],[128,3,.45],[128,4,.225],[96,6,.225],[80,6,.225],[80,6,.125],[64,6,.125],[48,8,.125],[24,16,.125]],s=this._ledParams,[t,n,_]=s||i[this._mode];let r,l,a=this._analyzerHeight;if(s){const c=2*e;let u;r=t+1;do r--,u=a/r/(1+n),l=u*n;while((u<c||l<c)&&r>1)}else{const c=540/n;l=Math.min(n*e,Math.max(2,a/c+.1|0))}this._maximizeLeds&&(a+=l),s||(r=Math.min(t,a/(l*2)|0)),this._leds=[r,_>=1?_:this._barWidth*_,l,a/r-l]}_createScales(){if(!this._ready)return;const e=this._analyzerWidth,i=this._canvasCtx.canvas,s=this._scaleX,t=this._scaleR,n=s.canvas,_=t.canvas,r=[],l=this._frequencyScale,a=this._initialX,c=this._chLayout==F,u=this._mirror,C=this._noteLabels,m=["C",,"D",,"E","F",,"G",,"A",,"B"],d=Math.min(i.width,i.height)*.03|0,o=n.height>>1,x=d>>1,L=2**(1/12);if(!C&&(this._ansiBands||l!=re))r.push(16,31.5,63,125,250,500,1e3,2e3,4e3),l==fe?r.push(6e3,8e3,1e4,12e3,14e3,16e3,18e3,2e4):r.push(8e3,16e3);else{let p=Ne;for(let A=-1;A<11;A++)for(let S=0;S<12;S++){if(p>=this._minFreq&&p<=this._maxFreq){const O=m[S],M=O=="C";(O&&C&&!u||M)&&r.push(C?[p,O+(M?A:"")]:p)}p*=L}}_.width=_.height=(this._radius<<1)+c*d;const R=_.width>>1,f=R-d*.7,w=(p,A)=>{if(C&&!c&&!["C","E","G"].includes(A[0]))return;const S=oe*(p/i.width),O=S-me,M=f*Math.cos(O),W=f*Math.sin(O);t.save(),t.translate(R+M,R+W),t.rotate(S),t.fillText(A,0,0),t.restore()};n.width|=0,s.fillStyle=t.strokeStyle=St,s.fillRect(0,0,n.width,n.height),t.arc(R,R,R-d/2,0,oe),t.lineWidth=d,t.stroke(),s.fillStyle=t.fillStyle=Xe,s.font=`${o}px ${ue}`,t.font=`${x}px ${ue}`,s.textAlign=t.textAlign="center";let b=0,B=0;for(const p of r){const[A,S]=Array.isArray(p)?p:[p,p<1e3?p|0:`${(p/100|0)/10}k`],O=this._unitWidth*(this._freqScaling(A)-this._scaleMin),M=n.height*.75,W=S[0]=="C",q=o*(C&&!u?W?1.2:.6:3);O>=0&&O<=e&&(s.fillStyle=t.fillStyle=W&&!u?vt:Xe,O>b+o/2&&(s.fillText(S,a+O,M,q),u&&s.fillText(S,(a||i.width)-O,M,q),b=O+Math.min(q,s.measureText(S).width)/2),O<e&&(O>B+x||W)&&(w(O,S),u&&O>x&&w(-O,S),B=O))}}_draw(e){const i=this._barSpace,s=this._barSpacePx,t=this._canvasCtx,n=t.canvas,_=this._scaleX.canvas,r=this._scaleR.canvas,l=this._canvasGradients,a=this._energy,c=this.fillAlpha,u=this._mode,C=this._isAlphaBars,m=this._isLedDisplay,d=this._linearAmplitude,o=this._isLumiBars,x=this._isBandsMode,L=this._isOutline,R=this.overlay,f=this._radial,w=this._chLayout,b=+this.lineWidth,B=this._mirror,p=this._channelHeight,A=this._channelGap,S=this._analyzerHeight,O=f?n.width:this._analyzerWidth,M=this._initialX,W=M+O,q=n.width>>1,se=n.height>>1,le=this._radius,pe=this.showBgColor,J=f?Math.min(q,se)-le:S,je=this.maxDecibels,Qe=this.minDecibels,ce=this.useCanvas,Le=this._weightingFilter;a.val>0&&(this._spinAngle+=this._spinSpeed*wt);const Ke=h=>{const g=h**2,G=424.36,I=11599.29,V=25122.25,P=544496.41,N=148693636,j=Z=>20*Math.log10(Z);switch(Le){case qe:const Z=N*g**2/((g+G)*Math.sqrt((g+I)*(g+P))*(g+N));return 2+j(Z);case Ge:const y=N*g*h/((g+G)*Math.sqrt(g+V)*(g+N));return .17+j(y);case ze:const E=N*g/((g+G)*(g+N));return .06+j(E);case He:const X=((103791848e-2-g)**2+108076816e-2*g)/((9837328-g)**2+11723776*g),U=h/68966888496476e-18*Math.sqrt(X/((g+79919.29)*(g+1345600)));return j(U);case We:const ee=-4737338981378384e-39*h**6+2043828333606125e-30*h**4-1363894795463638e-22*g+1,ae=1306612257412824e-34*h**5-2118150887518656e-26*h**3+.0005559488023498642*h,H=.0001246332637532143*h/Math.hypot(ee,ae);return 18.2+j(H)}return 0},Re=h=>{if(h&&b){const g=t.globalAlpha;t.globalAlpha=1,t.stroke(),t.globalAlpha=g}},Q=(h,g,G)=>{const I=le+g,V=G*oe*(h/n.width)+this._spinAngle;return[q+I*Math.cos(V),se+I*Math.sin(V)]},Ae=(h,g,G,I,V)=>{t.beginPath();for(const P of B?[1,-1]:[1])t.moveTo(...Q(h,g,P)),t.lineTo(...Q(h,g+I,P)),t.lineTo(...Q(h+G,g+I,P)),t.lineTo(...Q(h+G,g,P));Re(V),t.fill()},[Je,Se,de,_e]=this._leds||[],ve=h=>Math.max(0,(h*Je|0)*(_e+de)-de);let K=this._barWidth-(x?Math.max(m?Se:0,s):0);i==0&&!m&&(K|=0);let Ce=0;const Ee=this._bars.length,Be=w==Y?1:2;for(let h=0;h<Be;h++){const g=w==F?p*h+A*h:0,G=g+p,I=g+S-(m&&!this._maximizeLeds?de:0),V=!pe||m&&!R?"#000":this._gradients[this._selectedGrads[h]].bgColor,P=h==0||!f&&w!=Fe;if(ce){if(R&&P&&t.clearRect(0,g-A,n.width,p+A),(!R||pe)&&(R&&(t.globalAlpha=this.bgAlpha),t.fillStyle=V,P&&t.fillRect(M,g-A,O,(R&&this.reflexAlpha==1?S:p)+A),t.globalAlpha=1),this.showScaleY&&!o&&!f){const y=_.height,E=y>>1,X=d?100:je,U=d?0:Qe,ee=d?20:5,ae=S/(X-U);t.fillStyle=Ue,t.font=`${E}px ${ue}`,t.textAlign="right",t.lineWidth=1;for(let H=X;H>U;H-=ee){const v=g+(X-H)*ae,$=H%2==0|0;if($){const T=v+E*(v==g?.8:.35);B!=-1&&t.fillText(H,y*.85,T),B!=1&&t.fillText(H,n.width-y*.1,T),t.strokeStyle=Ue,t.setLineDash([2,4]),t.lineDashOffset=0}else t.strokeStyle=Ct,t.setLineDash([2,8]),t.lineDashOffset=1;t.beginPath(),t.moveTo(M+y*$*(B!=-1),~~v+.5),t.lineTo(W-y*$*(B!=1),~~v+.5),t.stroke()}t.setLineDash([]),t.lineDashOffset=0}m?(t.setLineDash([_e,de]),t.lineWidth=K):t.lineWidth=L?Math.min(b,K/2):b,t.fillStyle=t.strokeStyle=l[h]}let N=this._fftData[h];this._analyzer[h].getFloatFrequencyData(N),Le&&(N=N.map((y,E)=>y+Ke(this._binToFreq(E))));const j=(y,E)=>{const X=N[y]+(y<N.length-1?(N[y+1]-N[y])*E:0);return isNaN(X)?-1/0:X};t.beginPath();let Z=[];for(let y=0;y<Ee;y++){const E=this._bars[y],{freq:X,binLo:U,binHi:ee,ratioLo:ae,ratioHi:H}=E;let v=Math.max(j(U,ae),j(ee,H));for(let D=U+1;D<ee;D++)N[D]>v&&(v=N[D]);if(v=this._normalizedB(v),E.value[h]=v,Ce+=v,E.peak[h]>0&&(E.hold[h]--,E.hold[h]<0&&(E.peak[h]+=E.hold[h]/J)),v>=E.peak[h]&&(E.peak[h]=v,E.hold[h]=30),!ce)continue;o||C?t.globalAlpha=v:L&&(t.globalAlpha=c),v=m?ve(v):v*J|0,f&&h==1&&w==F&&(v*=-1);let $=K,T=E.posX;if(u==10){const D=y?0:(this._normalizedB(N[this._bars[1].binLo])*J*(h&&f&&w==F?-1:1)+v)/2;if(f){if(y==0&&t.lineTo(...Q(0,T<0?D:v,1)),T>=0){const z=[T,v];t.lineTo(...Q(...z,1)),Z.push(z)}}else{if(y==0)if(B!=-1){const z=U?this._normalizedB(N[U-1])*J:v;t.moveTo(M-b,I-z)}else t.moveTo(M,I-(T<M?D:v));(B!=-1||T>=M)&&t.lineTo(T,I-v)}}else if(u>0&&(m?T+=Math.max(Se/2,s/2):i==0?(T|=0,y>0&&T>this._bars[y-1].posX+K&&(T--,$++)):T+=s/2),m){const D=T+K/2;if(pe&&!R){const z=t.globalAlpha;t.beginPath(),t.moveTo(D,g),t.lineTo(D,I),t.strokeStyle=xt,t.globalAlpha=1,t.stroke(),t.strokeStyle=t.fillStyle,t.globalAlpha=z}t.beginPath(),t.moveTo(D,o?g:I),t.lineTo(D,o?G:I-v),t.stroke()}else if(T>=M)if(f)Ae(T,0,$,v,L);else{const D=T,z=o?g:I,Oe=$,Me=o?G:-v;t.beginPath(),t.moveTo(D,z),t.lineTo(D,z+Me),t.lineTo(D+Oe,z+Me),t.lineTo(D+Oe,z),Re(L),t.fill()}const ne=E.peak[h];if(ne>0&&this.showPeaks&&!o&&T>=M&&T<W)if(L&&b>0?t.globalAlpha=1:C&&(t.globalAlpha=ne),m){const D=ve(ne);D>=_e&&t.fillRect(T,I-D,K,_e)}else f?u!=10&&Ae(T,ne*J*(h&&w==F?-1:1),$,-2):t.fillRect(T,I-ne*J,$,2)}if(ce){if(t.globalAlpha=1,u==10){if(f){if(B){let y;for(;y=Z.pop();)t.lineTo(...Q(...y,-1))}t.closePath()}b>0&&t.stroke(),c>0&&(f?(t.moveTo(q+le,se),t.arc(q,se,le,0,oe,!0)):(t.lineTo(W,I),t.lineTo(M,I)),t.globalAlpha=c,t.fill(),t.globalAlpha=1)}if(this._reflexRatio>0&&!o){let y,E;this.reflexFit||w==F?(y=w==F&&h==0?p+A:0,E=p-S):(y=n.height-S*2,E=S),t.globalAlpha=this.reflexAlpha,this.reflexBright!=1&&(t.filter=`brightness(${this.reflexBright})`),t.setTransform(1,0,0,-1,0,n.height),t.drawImage(n,0,g,n.width,S,0,y,n.width,E),t.setTransform(1,0,0,1,0,0),t.filter="none",t.globalAlpha=1}}}a.val=Ce/(Ee<<Be-1),a.val>=a.peak?(a.peak=a.val,a.hold=30):a.hold>0?a.hold--:a.peak>0&&(a.peak*=(30+a.hold--)/30),ce&&(B&&!f&&(t.setTransform(-1,0,0,1,n.width-M,0),t.drawImage(n,M,0,q,n.height,0,0,q,n.height),t.setTransform(1,0,0,1,0,0)),t.setLineDash([]),this.showScaleX&&(f?(t.save(),t.translate(q,se),this._spinSpeed&&t.rotate(this._spinAngle+me),t.drawImage(r,-r.width>>1,-r.width>>1),t.restore()):t.drawImage(_,0,n.height-_.height))),this._frame++;const Te=e-this._time;if(Te>=1e3&&(this._fps=this._frame/(Te/1e3),this._frame=0,this._time=e),this.showFPS){const h=_.height;t.font=`bold ${h}px ${ue}`,t.fillStyle=yt,t.textAlign="right",t.fillText(Math.round(this._fps),n.width-h,h*2)}this.onCanvasDraw&&(t.save(),t.fillStyle=t.strokeStyle=l[0],this.onCanvasDraw(this,{timestamp:e,canvasGradients:l}),t.restore()),this._runId=requestAnimationFrame(h=>this._draw(h))}_freqScaling(e){switch(this._frequencyScale){case re:return Math.log2(e);case be:return 26.81*e/(1960+e)-.53;case ye:return Math.log2(1+e/700);case fe:return e}}_freqToBin(e,i="round"){const s=this._analyzer[0].frequencyBinCount-1,t=Math[i](e*this.fftSize/this.audioCtx.sampleRate);return t<s?t:s}_makeGrad(){if(!this._ready)return;const e=this._canvasCtx,i=e.canvas,s=this._chLayout,t=this._isLumiBars,n=this._radial,_=t?i.height:i.height*(1-this._reflexRatio*(s!=F))|0,r=1-this._reflexRatio,l=this._initialX,a=i.width>>1,c=i.height>>1,u=Math.min(a,c),C=this._radius;for(const m of[0,1]){const d=this._gradients[this._selectedGrads[m]],o=d.colorStops,x=d.dir=="h";let L;if(n?L=e.createRadialGradient(a,c,u,a,c,C-(u-C)*(s==F)):L=e.createLinearGradient(...x?[l,0,l+this._analyzerWidth,0]:[0,0,0,_]),o){const R=s==F&&!this._splitGradient&&(!x||n),f=(w,b)=>L.addColorStop(w,b.color||b);for(let w=0;w<1+R;w++)o.forEach((b,B)=>{const p=o.length-1;let A=b.pos!==void 0?b.pos:B/Math.max(1,p);if(R&&(A/=2),s==F&&!t&&!n&&!x&&(A*=r,!R&&A>.5*r&&(A+=.5*this._reflexRatio)),w==1)if(n||t){const S=p-B;b=o[S],A=1-(b.pos!==void 0?b.pos:S/Math.max(1,p))/2}else B==0&&A>0&&f(.5,b),A+=.5;f(A,b),s==F&&B==p&&A<.5&&f(.5,b)})}this._canvasGradients[m]=L}}_normalizedB(e){const i=this._linearAmplitude,s=i?1/this._linearBoost:1,t=(l,a,c)=>l<=a?a:l>=c?c:l,n=l=>10**(l/20);let _=this.maxDecibels,r=this.minDecibels;return i&&(_=n(_),r=n(r),e=n(e)**s),t((e-r)/(_-r)**s,0,1)}_setCanvas(e){if(!this._ready)return;const i=this._canvasCtx,s=i.canvas,t=this._scaleX.canvas,n=window.devicePixelRatio/(this._loRes+1);let _=window.screen.width*n,r=window.screen.height*n;Math.abs(window.orientation)==90&&_<r&&([_,r]=[r,_]);const l=this.isFullscreen,a=l&&this._fsEl==s,c=a?_:(this._width||this._container.clientWidth||this._defaultWidth)*n|0,u=a?r:(this._height||this._container.clientHeight||this._defaultHeight)*n|0;this._pixelRatio=n,this._fsWidth=_,this._fsHeight=r,!(s.width==c&&s.height==u)&&(s.width=c,s.height=u,this._calcAux(),this.overlay||(i.fillStyle="#000",i.fillRect(0,0,c,u)),i.lineJoin="bevel",t.width=c,t.height=Math.max(20*n,Math.min(c,u)/27|0),this._makeGrad(),this._calcBars(),this._fsStatus!==void 0&&this._fsStatus!==l&&(e=Pe),this._fsStatus=l,this.onCanvasResize&&this.onCanvasResize(e,this))}_setGradient(e,i){if(!this._gradients.hasOwnProperty(e))throw new k(Tt,e);[0,1].includes(i)||(this._selectedGrads[1]=e,i=0),this._selectedGrads[i]=e,this._makeGrad()}_setProps(e,i){const s={alphaBars:!1,ansiBands:!1,barSpace:.1,bgAlpha:.7,channelLayout:Y,fftSize:8192,fillAlpha:1,frequencyScale:re,gradient:Ye[0][0],ledBars:!1,linearAmplitude:!1,linearBoost:1,lineWidth:0,loRes:!1,lumiBars:!1,maxDecibels:-25,maxFreq:22e3,minDecibels:-85,minFreq:20,mirror:0,mode:0,noteLabels:!1,outlineBars:!1,overlay:!1,radial:!1,reflexAlpha:.15,reflexBright:1,reflexFit:!0,reflexRatio:0,showBgColor:!0,showFPS:!1,showPeaks:!0,showScaleX:!0,showScaleY:!1,smoothing:.5,spinSpeed:0,splitGradient:!1,start:!0,useCanvas:!0,volume:1,weightingFilter:ke},t=["onCanvasDraw","onCanvasResize"],n=["gradientLeft","gradientRight","height","width","stereo"],_=Object.keys(s).filter(r=>r!="start").concat(t,n);(i||e===void 0)&&(e={...s,...e});for(const r of Object.keys(e))t.includes(r)&&typeof e[r]!="function"?this[r]=void 0:_.includes(r)&&(this[r]=e[r]);e.start!==void 0&&this.toggleAnalyzer(e.start)}}const qt={class:"flex flex-col justify-center text-white"},Gt={class:"fullscreen-container rounded-3xl overflow-hidden m-4",id:"screen"},zt=["width","height"],Ht={class:"absolute top-4 left-4 text-xl select-none"},Wt={key:0,class:"i-la-play"},Pt={key:1,class:"i-la-pause"},Xt=te("div",{class:"i-la-trash-alt"},null,-1),Ut=[Xt],$t={__name:"spectrogram",setup(ie){const{mic:e,input:i}=gt(),s=Ze(!1);Ie(" ",d=>{s.value=!s.value,d.preventDefault()}),Ie("Enter",d=>{l(),d.preventDefault()});let t,n,_,r;function l(){n.fillStyle="#000",n.fillRect(0,0,a.width,a.height)}const a=et({initiated:!1,width:800,height:240,speed:tt(()=>Math.floor(a.speedCount/100)),speedCount:pt(100,100,300)});function c(d){d.tap&&(s.value=!s.value),a.speedCount-=d.delta[0]/2}it(()=>{_t(),t=document.getElementById("spectrogram"),n=t.getContext("2d"),_=document.createElement("canvas"),r=_.getContext("2d"),_.width=a.width,_.height=a.height,n.fillStyle="#000",n.fillRect(0,0,a.width,a.height)});let u;function C(){navigator.mediaDevices.getUserMedia({audio:!0,video:!1}).then(()=>{a.initiated=!0,u=new kt(null,{mode:1,connectSpeakers:!1,volume:0,useCanvas:!1,source:ut.meter,onCanvasDraw(d){if(s.value)return;r.drawImage(t,0,0,a.width,a.height);let o=d.getBars();for(let x=0;x<o.length;x++)n.fillStyle=m((o[x].freqLo+o[x].freqHi)/2,o[x].value[0]),n.fillRect(a.width-a.speed,a.height-x*(a.height/o.length),a.speed,1);n.translate(-a.speed,0),n.drawImage(_,0,0,a.width,a.height),n.setTransform(1,0,0,1,0,0)}}),e.open=!0,u.connectInput(i)}).catch(d=>{console.log("mic denied",d)})}function m(d,o){return`hsl(${ft(d)*30}, ${o*100}%, ${o*80}%)`}return(d,o)=>{const x=dt,L=st("drag");return he(),ge("div",qt,[te("div",Gt,[at(te("canvas",{class:"h-full min-h-30em w-full rounded-md cursor-pointer",id:"spectrogram",width:a.width,height:a.height},null,8,zt),[[L,c]]),a.initiated?rt("",!0):(he(),nt(x,{key:0,class:"absolute",onClick:o[0]||(o[0]=R=>C())})),te("div",Ht,"x"+ht(a.speed),1),te("button",{class:"absolute bottom-4 left-4 text-xl select-none cursor-pointer",onMousedown:o[1]||(o[1]=R=>s.value=!s.value)},[s.value?(he(),ge("div",Wt)):(he(),ge("div",Pt))],32),te("button",{class:"absolute top-4 right-4 text-xl select-none cursor-pointer",onMousedown:o[2]||(o[2]=R=>l())},Ut,32)])])}}},Yt=lt('<p>The colorful spectrogram is a powerful tool for visual audio analysis. Each particular frequency in the spectrum gets it&#39;s own position on the vertical axis along with the corresponding Chromatone color. The pitch spectrum is continous and the graph shows all the partials in a rather high resolution. The colors of the lines help differentiate pitches and overtones in any incoming audio signal. The quality of analysis is based primarily on the quality of the signal – thus a good microphone is recommended for best experience.</p><h2 id="how-to-use-the-spectrogram" tabindex="-1">How to use the spectrogram <a class="header-anchor" href="#how-to-use-the-spectrogram" aria-label="Permalink to &quot;How to use the spectrogram&quot;">​</a></h2><ol><li>Drag across <i class="p-3 mr-1 i-la-hand-rock"></i> the spectrogram top change the roll speed. The actual setting is at the top-left corner.</li><li>Press the <i class="p-3 mr-1 i-la-expand"></i> icon at the bottom-right corner make the spectrogram go full screen. Very useful mode for deep explorations and teaching.</li><li>You can pause <i class="p-3 mr-1 i-la-pause"></i> and resume <i class="p-3 mr-1 i-la-play"></i> the roll either by clicking anywhere at the spectrogram or by pressing the <code>Spacebar</code> button on your keyboard. Useful when comparing two or more sound spectrums – record a sound spectrum on the roll, then pause it, take another instrument and record another. The roll can fit up to 10 segments or even more.</li><li>Clear the canvas with the <i class="p-3 mr-1 i-la-trash-alt"></i> button at the top-right corner or by pressing the <code>Enter</code> button on your keyboard.</li></ol>',3),ri=JSON.parse('{"title":"Spectrogram","description":"2.5D representation on frequency domain in time","frontmatter":{"title":"Spectrogram","description":"2.5D representation on frequency domain in time","date":"2022-06-16T00:00:00.000Z","cover":"spectrogram.png","usefulLinks":["https://codepen.io/hvianna/pen/ZEKWWJb","https://www.npmjs.com/package/audiomotion-analyzer","https://github.com/ListeningToWaves/SpectrogramTesting/blob/master/src/components/spectrogram.js"]},"headers":[],"relativePath":"practice/pitch/spectrogram/index.md","filePath":"practice/pitch/spectrogram/index.md"}'),Vt={name:"practice/pitch/spectrogram/index.md"},hi=Object.assign(Vt,{setup(ie){return(e,i)=>{const s=ct("client-only");return he(),ge("div",null,[De(s,null,{default:ot(()=>[De($t,{class:"mb-8"})]),_:1}),Yt])}}});export{ri as __pageData,hi as default};
