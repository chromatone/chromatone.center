const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/chunks/ChromaGrids.D_2l5fy_.js","assets/chunks/framework.BhJJX2Rg.js","assets/chunks/theme.DUfZnntm.js"])))=>i.map(i=>d[i]);
import{z as i,O as e,T as r,Y as l,y as c,u as _,ac as d,B as p,ab as m,_ as u}from"./chunks/framework.BhJJX2Rg.js";import{aC as f,ax as x}from"./chunks/theme.DUfZnntm.js";const g={class:"flex flex-wrap"},B=JSON.parse('{"title":"Chroma Grid","description":"Compose phrases and motifs in flexible grids","frontmatter":{"title":"Chroma Grid","description":"Compose phrases and motifs in flexible grids","layout":"app","date":"2021-11-02T00:00:00.000Z","cover":"grid.png","todo":["MIDI out channels","midi out on-off","solo","mutes","synth"]},"headers":[],"relativePath":"practice/sequencing/grid/index.md","filePath":"practice/sequencing/grid/index.md","lastUpdated":1734513140000}'),h={name:"practice/sequencing/grid/index.md"},N=Object.assign(h,{setup(C){const n=m(()=>u(()=>import("./chunks/ChromaGrids.D_2l5fy_.js"),__vite__mapDeps([0,1,2])));return(v,t)=>{const o=f,s=x,a=l("client-only");return c(),i("div",null,[e(a,null,{default:r(()=>[e(_(n)),t[0]||(t[0]=d()),p("div",g,[e(o,{style:{flex:"1 1 20px"}}),e(s,{style:{flex:"1 1 20px"}})])]),_:1})])}}});export{B as __pageData,N as default};
