const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/chunks/ChromaGrids.haeg9fEr.js","assets/chunks/framework.BjEhsXnI.js","assets/chunks/theme.Bl9EEmmj.js"])))=>i.map(i=>d[i]);
import{y as i,P as e,U as r,$ as l,x as c,E as _,au as d,A as p,at as m,_ as u}from"./chunks/framework.BjEhsXnI.js";import{ax as f,ar as x}from"./chunks/theme.Bl9EEmmj.js";const g={class:"flex flex-wrap"},E=JSON.parse('{"title":"Chroma Grid","description":"Compose phrases and motifs in flexible grids","frontmatter":{"title":"Chroma Grid","description":"Compose phrases and motifs in flexible grids","layout":"app","date":"2021-11-02T00:00:00.000Z","cover":"grid.png","todo":["MIDI out channels","midi out on-off","solo","mutes","synth"]},"headers":[],"relativePath":"practice/sequencing/grid/index.md","filePath":"practice/sequencing/grid/index.md","lastUpdated":1729182362000}'),h={name:"practice/sequencing/grid/index.md"},N=Object.assign(h,{setup(C){const n=m(()=>u(()=>import("./chunks/ChromaGrids.haeg9fEr.js"),__vite__mapDeps([0,1,2])));return(v,t)=>{const o=f,s=x,a=l("client-only");return c(),i("div",null,[e(a,null,{default:r(()=>[e(_(n)),t[0]||(t[0]=d()),p("div",g,[e(o,{style:{flex:"1 1 20px"}}),e(s,{style:{flex:"1 1 20px"}})])]),_:1})])}}});export{E as __pageData,N as default};
