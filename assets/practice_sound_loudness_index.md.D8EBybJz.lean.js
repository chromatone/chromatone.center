const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/chunks/SoundLoudness.Dwpl-u5n.js","assets/chunks/trash.DUg40We9.js","assets/chunks/framework.B7TlvOs3.js","assets/chunks/theme.BbxB4Lxg.js"])))=>i.map(i=>d[i]);
import{g as n,V as t,l as s,h as e,ae as a,f as l,au as u,J as r}from"./chunks/framework.B7TlvOs3.js";const d=e("blockquote",null,[e("p",null,[e("strong",null,"Find your own equal loudness contour"),e("br"),a(" Place sine oscillators on the 2D-plane where vertical axis is the volume and horizontal is the frequency of the sounds being played. You can build up a curve for your absolute threshold of hearing, or explore your own feeling of really loud sounds. "),e("strong",null,"Be careful clicking at the top of the graph!")])],-1),f=JSON.parse('{"title":"Equal loudness contour","description":"Build you own loudness contours","frontmatter":{"title":"Equal loudness contour","description":"Build you own loudness contours","date":"2021-11-12T00:00:00.000Z","layout":"app","cover":"loudness.png"},"headers":[],"relativePath":"practice/sound/loudness/index.md","filePath":"practice/sound/loudness/index.md","lastUpdated":1725104782000}'),c={name:"practice/sound/loudness/index.md"},m=Object.assign(c,{setup(i){const o=u(()=>r(()=>import("./chunks/SoundLoudness.Dwpl-u5n.js"),__vite__mapDeps([0,1,2,3])));return(p,_)=>(l(),n("div",null,[t(s(o)),d]))}});export{f as __pageData,m as default};
