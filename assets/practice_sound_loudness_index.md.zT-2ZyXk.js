const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/chunks/SoundLoudness.nBxMoGT8.js","assets/chunks/trash.CxB0FQaN.js","assets/chunks/framework.DqGUeSFU.js","assets/chunks/theme.CMLB9bsx.js"])))=>i.map(i=>d[i]);
import{h as t,t as s,u as a,i as e,aI as l,c as u,aH as r,Z as d}from"./chunks/framework.DqGUeSFU.js";const f=JSON.parse('{"title":"Equal loudness contour","description":"Build you own loudness contours","frontmatter":{"title":"Equal loudness contour","description":"Build you own loudness contours","date":"2021-11-12T00:00:00.000Z","layout":"app","cover":"loudness.png"},"headers":[],"relativePath":"practice/sound/loudness/index.md","filePath":"practice/sound/loudness/index.md","lastUpdated":1739467643000}'),i={name:"practice/sound/loudness/index.md"},h=Object.assign(i,{setup(c){const n=r(()=>d(()=>import("./chunks/SoundLoudness.nBxMoGT8.js"),__vite__mapDeps([0,1,2,3])));return(p,o)=>(u(),t("div",null,[s(a(n)),o[0]||(o[0]=e("blockquote",null,[e("p",null,[e("strong",null,"Find your own equal loudness contour"),e("br"),l(" Place sine oscillators on the 2D-plane where vertical axis is the volume and horizontal is the frequency of the sounds being played. You can build up a curve for your absolute threshold of hearing, or explore your own feeling of really loud sounds. "),e("strong",null,"Be careful clicking at the top of the graph!")])],-1))]))}});export{f as __pageData,h as default};
