import{_ as o}from"./chunks/ColorCmyk.ba085e1f.js";import{_ as r,c as a,f as i,h as n,a as e,y as s,o as l}from"./chunks/framework.5d1030ab.js";import"./chunks/ColorSvgInfo.daf62523.js";import"./chunks/colors.4aca3d40.js";import"./chunks/index.4d18a0f4.js";import"./chunks/index.654bd828.js";import"./chunks/calculations.2bac3e9a.js";import"./chunks/index.e98b5e67.js";import"./chunks/midi.490ff1fe.js";import"./chunks/index.2be4a733.js";import"./chunks/commonjsHelpers.de833af9.js";import"./chunks/synth.f30068b3.js";import"./chunks/audio.36f0d408.js";import"./chunks/Scale.b6214b1d.js";import"./chunks/Subtract.109130cb.js";import"./chunks/PingPongDelay.244b18e5.js";import"./chunks/AutoPanner.6f08faee.js";import"./chunks/MonoSynth.c00b1270.js";import"./chunks/Filter.ca6be54c.js";import"./chunks/theory.83a66c14.js";import"./chunks/index.e63c3080.js";import"./chunks/index.5a28b3ed.js";const c="/assets/chromatography_1841.5772bbb2.png",d="/assets/tint-tone-shade.7072b328.svg",U=JSON.parse('{"title":"Subtractive color models","description":"The colors produced by materials absorbing certain light frequencies. RYB and CMYK","frontmatter":{"title":"Subtractive color models","description":"The colors produced by materials absorbing certain light frequencies. RYB and CMYK","date":"2021-08-20T00:00:00.000Z","cover":"cmyk.svg"},"headers":[],"relativePath":"theory/color/models/subtractive/index.md","filePath":"theory/color/models/subtractive/index.md","lastUpdated":1700240387000}'),p={name:"theory/color/models/subtractive/index.md"},h=n('<p>Subtractive means that color is produced by absorbing some parts of white light spectrum by the material. Subtractive models are used in painting and printing, where different pigment mixtures make up different colors.</p><p>A color model is subtractive in the sense that mixtures of dyes subtract specific wavelengths from the spectral power distribution of the illuminating light which is scattered back into the viewer&#39;s eye and is perceived as colored. Mixing of dyes is used to reproduce a gamut of colors, the resultant color from this layer is predicted by multiplying (not subtracting) the absorbance profiles of the dyes.</p><h3 id="ryb" tabindex="-1">RYB <a class="header-anchor" href="#ryb" aria-label="Permalink to &quot;RYB&quot;">​</a></h3><img src="'+c+'"><blockquote><p>An RYB color chart from George Field&#39;s 1841 Chromatography; or, A treatise on colours and pigments: and of their powers in painting.</p></blockquote><p><strong>RYB</strong> (an abbreviation of red–yellow–blue) is a subtractive color model used in art and applied design in which red, yellow, and blue pigments are considered primary colors.</p><p>In this context, the term primary color refers to three exemplar colors (red, yellow, and blue) as opposed to specific pigments. As illustrated, in the RYB color model, red, yellow, and blue are intermixed to create secondary color segments of orange, green, and purple. This set of primary colors emerged at a time when access to a large range of pigments was limited by availability and cost, and it encouraged artists and designers to explore the many nuances of color through mixing and intermixing a limited range of pigment colors. In art and design education, red, yellow, and blue pigments were usually augmented with white and black pigments, enabling the creation of a larger gamut of color nuances including tints and shades.</p><p><img src="'+d+'" alt=""></p><blockquote><p><strong>Jacob Christoph Le Blon</strong> was the first to apply the RYB color model to printing, specifically mezzotint printing, and he used separate plates for each color: yellow, red and blue plus black to add shades and contrast. In &#39;Coloritto&#39;, Le Blon asserted that “the art of mixing colours…(in) painting can represent all visible objects with three colours: yellow, red and blue; for all colours can be composed of these three, which I call Primitive”. Le Blon added that red and yellow make orange; red and blue, make purple; and blue and yellow make green (Le Blon, 1725, p6).</p></blockquote><h3 id="cmy-and-cmyk" tabindex="-1">CMY and CMYK <a class="header-anchor" href="#cmy-and-cmyk" aria-label="Permalink to &quot;CMY and CMYK&quot;">​</a></h3><p>The <strong>CMY</strong> color model is a subtractive color model in which cyan, magenta and yellow pigments or dyes are added together in various ways to reproduce a broad array of colors.</p><p>When the intensities for all the components are the same, the result is a shade of gray, lighter, or darker depending on the intensity. When the intensities are different, the result is a colorized hue, more or less saturated depending on the difference of the strongest and weakest of the intensities of the primary colors employed.</p><h3 id="interactive-cmyk-mixer" tabindex="-1">Interactive CMYK mixer <a class="header-anchor" href="#interactive-cmyk-mixer" aria-label="Permalink to &quot;Interactive CMYK mixer&quot;">​</a></h3><p>Drag any of the color components up or right to increase it&#39;s value.</p>',14),m=e("p",null,[e("strong",null,"CMYK"),s(" color model is a subtractive color model, based on the CMY color model, used in color printing, and is also used to describe the printing process itself, that is used in the layering technique by printers to create different colors on a white paper. CMYK refers to the four inks used in some color printing: cyan, magenta, yellow, and key. It uses K, black ink, since C, M, and Y inks are translucent and will only produce a gray color when laid on top of each other.")],-1),u=e("p",null,"With CMYK printing, halftoning (also called screening) allows for less than full saturation of the primary colors; tiny dots of each primary color are printed in a pattern small enough that humans perceive a solid color.",-1),g=e("p",null,"Light, saturated colors often cannot be created with CMYK, and light colors in general may make visible the halftone pattern. Using a CcMmYK process, with the addition of light cyan and magenta inks to CMYK, can solve these problems.",-1);function f(b,y,_,w,v,k){const t=o;return l(),a("div",null,[h,i(t),m,u,g])}const j=r(p,[["render",f]]);export{U as __pageData,j as default};
