import{B as e,D as t,C as a,as as o}from"./chunks/framework.C3LH_Uf3.js";const m=JSON.parse('{"title":"Ring Tone Text Transfer Language","description":"Note encoding format for ringtones","frontmatter":{"title":"Ring Tone Text Transfer Language","description":"Note encoding format for ringtones","date":"2021-09-20T00:00:00.000Z"},"headers":[],"relativePath":"theory/notes/computer/ring-tone/index.md","filePath":"theory/notes/computer/ring-tone/index.md","lastUpdated":1720375267000}'),n={name:"theory/notes/computer/ring-tone/index.md"},i=o(`<p><a href="https://en.wikipedia.org/wiki/Ring_Tone_Text_Transfer_Language" target="_blank" rel="noreferrer">Ring Tone Text Transfer Language</a> (RTTTL) was developed by Nokia[citation needed] to be used to transfer ringtones to cellphone by Nokia.</p><p>The RTTTL format is a string divided into three sections: name, default value, and data.</p><p>The jintu section consists of a string describing the name of the ringtone. It can be no longer than 10 characters, and cannot contain a colon &quot;:&quot; character. (However, since the Smart Messaging specification allows names up to 15 characters in length, some applications processing RTTTL also do so.)</p><p>The default value section is a set of values separated by commas, where each value contains a key and a value separated by an = character, which describes certain defaults which should be adhered to during the execution of the ringtone. Possible names are</p><ul><li>d - duration</li><li>o - octave</li><li>b - beat, tempo</li></ul><p>The data section consists of a set of character strings separated by commas, where each string contains a duration, pitch, octave and optional dotting (which increases the duration of the note by one half).</p><p>The format of RTTTL notation is similar to the Music Macro Language found in BASIC implementations present on many early microcomputers.</p><h2 id="technical-specification" tabindex="-1">Technical specification <a class="header-anchor" href="#technical-specification" aria-label="Permalink to &quot;Technical specification&quot;">​</a></h2><p>To be recognized by ringtone programs, an RTTTL/Nokring format ringtone must contain three specific elements: name, settings, and notes.</p><p>For example, here is the RTTTL ringtone for Haunted House:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>HauntHouse: d=4,o=5,b=108: 2a4, 2e, 2d#, 2b4, 2a4, 2c, 2d, 2a#4, 2e., e, 1f4, 1a4, 1d#, 2e., d, 2c., b4, 1a4, 1p, 2a4, 2e, 2d#, 2b4, 2a4, 2c, 2d, 2a#4, 2e., e, 1f4, 1a4, 1d#, 2e., d, 2c., b4, 1a4</span></span></code></pre></div><p>The three parts are separated by a colon.</p><ul><li><p>Part 1: name of the ringtone (here: &quot;HauntHouse&quot;), a string of characters represents the name of the ringtone</p></li><li><p>Part 2: settings (here: d=4,o=5,b=108), where &quot;d=&quot; is the default duration of a note. In this case, the &quot;4&quot; means that each note with no duration specifier (see below) is by default considered a quarter note. &quot;8&quot; would mean an eighth note, and so on. Accordingly, &quot;o=&quot; is the default octave. There are four octaves in the Nokring/RTTTL format. And &quot;b=&quot; is the tempo, in &quot;beats per minute&quot;.</p></li><li><p>Part 3: the notes. Each note is separated by a comma and includes, in sequence: a duration specifier, a standard music note, either a, b, c, d, e, f or g, and an octave specifier, as in scientific pitch notation. If no duration or octave specifier are present, the default applies.</p></li></ul><h3 id="durations" tabindex="-1">Durations <a class="header-anchor" href="#durations" aria-label="Permalink to &quot;Durations&quot;">​</a></h3><p>Standard musical durations are denoted by the following notations:</p><ul><li>1 - whole note</li><li>2 - half note</li><li>4 - quarter note</li><li>8 - eighth note</li><li>16 - sixteenth note</li><li>32 - thirty-second note</li></ul><p>Dotted rhythm patterns can be formed by appending a period (&quot;.&quot;) character to the end of a duration/beat/octave element.</p><h3 id="pitch" tabindex="-1">Pitch <a class="header-anchor" href="#pitch" aria-label="Permalink to &quot;Pitch&quot;">​</a></h3><pre><code>P - rest or pause
A - A
A# - A♯ / B♭
B - B / C♭
C - C
C# - C♯ / D♭
D - D
D# - D♯ / E♭
E - E / F♭
F - F / E♯
F# - F♯ / G♭
G - G
G# - G♯ / A♭
</code></pre><h3 id="octave" tabindex="-1">Octave <a class="header-anchor" href="#octave" aria-label="Permalink to &quot;Octave&quot;">​</a></h3><p>The RTTTL format allows octaves starting from the A below middle C and going up four octaves. This corresponds with the inability of cellphones to reproduce certain tones audibly. These octaves are numbered from lowest pitch to highest pitch from 4 to 7.</p><p>The octave should be left out of the notation in the case of a rest or pause in the pattern. Example</p><p>An example of the RTTTL format would be</p><p><code>fifth:d=4,o=5,b=63:8P,8G5,8G5,8G5,2D#5</code></p>`,24),r=[i];function s(c,d,h,l,p,u){return a(),t("div",null,r)}const g=e(n,[["render",s]]);export{m as __pageData,g as default};
