import{q as t,y as a,N as o,x as s}from"./chunks/framework.Bh6q1hI4.js";const f=JSON.parse('{"title":"Oscillator sync","description":"Once oscillator resetting another as a technique to produce harmonically reach sounds","frontmatter":{"title":"Oscillator sync","description":"Once oscillator resetting another as a technique to produce harmonically reach sounds","date":"2014-09-20T00:00:00.000Z"},"headers":[],"relativePath":"theory/synthesis/osc-sync/index.md","filePath":"theory/synthesis/osc-sync/index.md","lastUpdated":1731946934000}'),r={name:"theory/synthesis/osc-sync/index.md"};function i(n,e,l,c,h,d){return s(),a("div",null,e[0]||(e[0]=[o('<p>Oscillator sync is a feature in some synthesizers with two or more VCOs, DCOs, or &quot;virtual&quot; oscillators. As one oscillator finishes a cycle, it resets the period of another oscillator, forcing the latter to have the same base frequency. This can produce a harmonically rich sound, the timbre of which can be altered by varying the synced oscillator&#39;s frequency. A synced oscillator that resets other oscillator(s) is called the master; the oscillators which it resets are called slaves. There are two common forms of oscillator sync which appear on synthesizers: Hard Sync and Soft Sync. According to Sound on Sound journalist Gordon Reid, oscillator sync is &quot;one of the least understood facilities on any synthesizer&quot;.</p><h2 id="hard-sync" tabindex="-1">Hard Sync <a class="header-anchor" href="#hard-sync" aria-label="Permalink to &quot;Hard Sync&quot;">​</a></h2><p>The leader oscillator&#39;s pitch is generated by user input (typically the synthesizer&#39;s keyboard), and is arbitrary. The follower oscillator&#39;s pitch may be tuned to (or detuned from) this frequency, or may remain constant. Every time the leader oscillator&#39;s cycle repeats, the follower is retriggered, regardless of its position. If the follower is tuned to a lower frequency than the leader it will be forced to repeat before it completes an entire cycle, and if it is tuned to a higher frequency it will be forced to repeat partway through a second or third cycle. This technique ensures that the oscillators are technically playing at the same frequency, but the irregular cycle of the follower oscillator often causes complex timbres and the impression of harmony. If the tuning of the follower oscillator is swept, one may discern a harmonic sequence.</p><p>This effect may be achieved by measuring the zero axis crossings of the leader oscillator and retriggering the follower oscillator after every other crossing.</p><p>This form of oscillator sync is more common than soft sync, but is prone to generating aliasing in naive digital implementations.</p><h2 id="soft-sync" tabindex="-1">Soft Sync <a class="header-anchor" href="#soft-sync" aria-label="Permalink to &quot;Soft Sync&quot;">​</a></h2><p>There are several other kinds of sync which may also be called Soft Sync. In a Hard Sync setup, the follower oscillator is forced to reset to some level and phase (for example, zero) with every cycle of the leader regardless of position or direction of the follower waveform, which often generates asymmetrical shapes.</p><p>In some cases, Soft Sync refers to a process intended to nudge and lock the follower oscillator into the same or an integer or fractional multiple of the leader oscillator frequency when they both have similar phases, similar to a phase-locked loop.</p><h3 id="reversing-sync" tabindex="-1">Reversing Sync <a class="header-anchor" href="#reversing-sync" aria-label="Permalink to &quot;Reversing Sync&quot;">​</a></h3><p>This form of oscillator sync is less common. This form is very similar to Hard Sync, with one small difference. In Reversing Soft Sync, rather than resetting to zero, the wave is inverted; that is, its direction is reversed. Reversing Soft Sync is more associated with analog triangle core oscillators than analog sawtooth core oscillators.</p><h3 id="threshold-or-weak-sync" tabindex="-1">Threshold or Weak Sync <a class="header-anchor" href="#threshold-or-weak-sync" aria-label="Permalink to &quot;Threshold or Weak Sync&quot;">​</a></h3><p>Several kinds of Soft Sync use comparison thresholds:</p><ul><li>Hard Sync which is disabled when the frequency or amplitude of the follower crosses a user-defined threshold.</li><li>Hard Sync which is disabled when the frequency of the follower extends too high above or too far below the frequency of the leader.</li><li>Hard Sync which is disabled when the frequency of the follower is lower than the frequency of the leader.</li></ul><p>Soft Sync may accurately refer to any of these, depending on the synthesizer or manufacturer in question.</p><h3 id="phase-advance-sync" tabindex="-1">Phase Advance &#39;Sync&#39; <a class="header-anchor" href="#phase-advance-sync" aria-label="Permalink to &quot;Phase Advance &#39;Sync&#39;&quot;">​</a></h3><p>The phase of the follower is advanced by some amount when the leader oscillator level crosses some threshold. Used for audio synthesis, this may give an audible effect similar to Soft Sync.</p><h3 id="reset-inhibit-sync" tabindex="-1">Reset Inhibit Sync <a class="header-anchor" href="#reset-inhibit-sync" aria-label="Permalink to &quot;Reset Inhibit Sync&quot;">​</a></h3><p>When the leader oscillator crosses some threshold, the normal reset of the follower is disabled: it will stick at its final level, positive or negative. When the leader crosses back over some threshold, the follower is reset.</p><h3 id="overlap-sync" tabindex="-1">Overlap Sync <a class="header-anchor" href="#overlap-sync" aria-label="Permalink to &quot;Overlap Sync&quot;">​</a></h3><p>In this method, the current wave completes but a new waveform is generated at the sync pulse. The tail of the old wave and the new wave are output summed if they overlap.</p><h2 id="digital-implementation-aspects" tabindex="-1">Digital Implementation Aspects <a class="header-anchor" href="#digital-implementation-aspects" aria-label="Permalink to &quot;Digital Implementation Aspects&quot;">​</a></h2><p>Naive approaches to sync in digital oscillators will result in aliasing. To prevent this, band-limited methods such as additive synthesis, BLIT (Band-Limited Impulse Train) or BLEP (Band-Limited Step) must be adopted to avoid aliasing.</p><p>In a digital oscillator, best practice is that the follower will not be reset to the identical phase each cycle, but to a phase advanced by an equivalent time to the phase of the leader at the reset. This prevents jitter in the follower frequency and provides truer synchronization.</p><p>For digital oscillators, Reversing Sync may less frequently generate aliasing. This effect may be naively implemented by measuring the zero axis crossings of the leader oscillator and reversing the slope of the follower oscillator after every other crossing.</p><p>For digital implementation, note that none of the Threshold or Weak Sync methods actually synthesize the waveform in a way different from Hard Sync (rather, they selectively deactivate it).</p><p>Overlap sync is primarily a digital technique with simple implementation, such as used in FOF; an analog implementation could be a highly damped sine oscillator excited by the reset pulse.</p><h2 id="sync-based-architectures" tabindex="-1">Sync-based Architectures <a class="header-anchor" href="#sync-based-architectures" aria-label="Permalink to &quot;Sync-based Architectures&quot;">​</a></h2><p>A variety of synthesis architectures are based on sync, often used in conjunction with amplitude, frequency, or phase modulation. Such architectures include VOSIM and physical modelling synthesis.</p>',28)]))}const p=t(r,[["render",i]]);export{f as __pageData,p as default};
